{"ast":null,"code":"import _classCallCheck from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kaka/Desktop/my-expenses/web/src/views/user/login.js\";\nimport React, { Component } from \"react\";\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from \"../../components/common/react-notifications\";\nimport { login } from \"../../helpers/Server/Auth\";\nimport { Formik, Form, Field } from \"formik\";\nimport { authenticateAsync } from \"../../redux/actions\";\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\nimport IntlMessages from \"../../helpers/IntlMessages\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.onUserLogin = function (values) {\n      if (!_this.state.loading) {\n        if (values.email !== \"\" && values.password !== \"\") {\n          _this.setLoading(true);\n\n          var serverCall = function serverCall() {\n            return login(values);\n          };\n\n          _this.props.authenticateAsync(serverCall, function () {\n            _this.setLoading(false);\n\n            _this.props.history.push(\"/\");\n          }, function (message) {\n            _this.setLoading(false);\n\n            NotificationManager.error(message, \"Login Failed\", 3000, null, null, \"\");\n          });\n        }\n      }\n    };\n\n    _this.onLoginClicked = function (event) {\n      _this.setState({\n        loginClicked: true\n      });\n    };\n\n    _this.validateEmail = function (value) {\n      var error;\n\n      if (!value) {\n        error = \"Please enter your email address\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n        error = \"Invalid email address\";\n      }\n\n      return error;\n    };\n\n    _this.setLoading = function (isLoading) {\n      _this.setState({\n        loading: isLoading\n      });\n    };\n\n    _this.validatePassword = function (value) {\n      var error;\n\n      if (!value) {\n        error = \"Please enter your password\";\n      } else if (value.length < 4) {\n        error = \"Value must be longer than 3 characters\";\n      }\n\n      return error;\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      loginClicked: false,\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          password = _this$state.password,\n          email = _this$state.email,\n          loginClicked = _this$state.loginClicked,\n          loading = _this$state.loading;\n      var initialValues = {\n        email: email,\n        password: password\n      };\n      return React.createElement(Row, {\n        className: \"h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Colxx, {\n        xxs: \"12\",\n        md: \"10\",\n        className: \"mx-auto my-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"auth-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"position-relative image-side \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-white h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"MAGIC IS IN THE DETAILS\"), React.createElement(\"p\", {\n        className: \"white mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Please use your credentials to login.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), \"If you are not a member, please\", \" \", React.createElement(NavLink, {\n        style: {\n          textDecoration: \"underline\"\n        },\n        to: \"/user/register\",\n        className: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"register\"), \".\")), React.createElement(\"div\", {\n        className: \"form-side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/\",\n        className: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"logo-single\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(CardTitle, {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"user.login-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(Formik, {\n        initialValues: initialValues,\n        onSubmit: this.onUserLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, function (_ref) {\n        var errors = _ref.errors;\n        return React.createElement(Form, {\n          className: \"av-tooltip tooltip-label-bottom\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          className: \"form-group has-float-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(IntlMessages, {\n          id: \"user.email\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        })), React.createElement(Field, {\n          className: \"form-control\",\n          name: \"email\",\n          validate: _this2.validateEmail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }), errors.email && loginClicked && React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, errors.email)), React.createElement(FormGroup, {\n          className: \"form-group has-float-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(IntlMessages, {\n          id: \"user.password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        })), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"password\",\n          name: \"password\",\n          validate: _this2.validatePassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }), errors.password && loginClicked && React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, errors.password)), React.createElement(\"div\", {\n          className: \"d-flex justify-content-between align-items-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          style: {\n            textDecoration: \"underline\"\n          },\n          to: \"/user/forgot-password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(IntlMessages, {\n          id: \"user.forgot-password-question\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        })), React.createElement(Button, {\n          color: \"primary\",\n          className: \"btn-shadow btn-multiple-state \".concat(loading ? \"show-spinner\" : \"\"),\n          size: \"lg\",\n          type: \"submit\",\n          onClick: function onClick(event) {\n            return _this2.onLoginClicked(event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"spinner d-inline-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"bounce1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"bounce2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"bounce3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(IntlMessages, {\n          id: \"user.login-button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        })))));\n      })))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var authUser = _ref2.authUser;\n  var error = authUser.error;\n  return {\n    error: error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  authenticateAsync: authenticateAsync\n})(Login);","map":{"version":3,"sources":["/Users/kaka/Desktop/my-expenses/web/src/views/user/login.js"],"names":["React","Component","Row","Card","CardTitle","Label","FormGroup","Button","NavLink","connect","NotificationManager","login","Formik","Form","Field","authenticateAsync","Colxx","IntlMessages","Login","props","onUserLogin","values","state","loading","email","password","setLoading","serverCall","history","push","message","error","onLoginClicked","event","setState","loginClicked","validateEmail","value","test","isLoading","validatePassword","length","initialValues","textDecoration","errors","mapStateToProps","authUser"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,SAApB,EAA+BC,KAA/B,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,YAA/D;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,mBAAT,QAAoC,6CAApC;AACA,SAASC,KAAT,QAAsB,2BAAtB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,KAAT,QAAsB,yCAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AADiB,UAUnBC,WAVmB,GAUL,UAAAC,MAAM,EAAI;AACtB,UAAI,CAAC,MAAKC,KAAL,CAAWC,OAAhB,EAAyB;AACvB,YAAIF,MAAM,CAACG,KAAP,KAAiB,EAAjB,IAAuBH,MAAM,CAACI,QAAP,KAAoB,EAA/C,EAAmD;AACjD,gBAAKC,UAAL,CAAgB,IAAhB;;AACA,cAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,mBAAMhB,KAAK,CAACU,MAAD,CAAX;AAAA,WAAnB;;AACA,gBAAKF,KAAL,CAAWJ,iBAAX,CACEY,UADF,EAEE,YAAM;AACJ,kBAAKD,UAAL,CAAgB,KAAhB;;AACA,kBAAKP,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,WALH,EAME,UAAAC,OAAO,EAAI;AACT,kBAAKJ,UAAL,CAAgB,KAAhB;;AACAhB,YAAAA,mBAAmB,CAACqB,KAApB,CACED,OADF,EAEE,cAFF,EAGE,IAHF,EAIE,IAJF,EAKE,IALF,EAME,EANF;AAQD,WAhBH;AAkBD;AACF;AACF,KAnCkB;;AAAA,UAqCnBE,cArCmB,GAqCF,UAAAC,KAAK,EAAI;AACxB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD,KAvCkB;;AAAA,UAyCnBC,aAzCmB,GAyCH,UAAAC,KAAK,EAAI;AACvB,UAAIN,KAAJ;;AACA,UAAI,CAACM,KAAL,EAAY;AACVN,QAAAA,KAAK,GAAG,iCAAR;AACD,OAFD,MAEO,IAAI,CAAC,4CAA4CO,IAA5C,CAAiDD,KAAjD,CAAL,EAA8D;AACnEN,QAAAA,KAAK,GAAG,uBAAR;AACD;;AACD,aAAOA,KAAP;AACD,KAjDkB;;AAAA,UAmDnBL,UAnDmB,GAmDN,UAAAa,SAAS,EAAI;AACxB,YAAKL,QAAL,CAAc;AAAEX,QAAAA,OAAO,EAAEgB;AAAX,OAAd;AACD,KArDkB;;AAAA,UAuDnBC,gBAvDmB,GAuDA,UAAAH,KAAK,EAAI;AAC1B,UAAIN,KAAJ;;AACA,UAAI,CAACM,KAAL,EAAY;AACVN,QAAAA,KAAK,GAAG,4BAAR;AACD,OAFD,MAEO,IAAIM,KAAK,CAACI,MAAN,GAAe,CAAnB,EAAsB;AAC3BV,QAAAA,KAAK,GAAG,wCAAR;AACD;;AACD,aAAOA,KAAP;AACD,KA/DkB;;AAEjB,UAAKT,KAAL,GAAa;AACXE,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXU,MAAAA,YAAY,EAAE,KAHH;AAIXZ,MAAAA,OAAO,EAAE;AAJE,KAAb;AAFiB;AAQlB;;;;6BAyDQ;AAAA;;AAAA,wBAC4C,KAAKD,KADjD;AAAA,UACCG,QADD,eACCA,QADD;AAAA,UACWD,KADX,eACWA,KADX;AAAA,UACkBW,YADlB,eACkBA,YADlB;AAAA,UACgCZ,OADhC,eACgCA,OADhC;AAEP,UAAMmB,aAAa,GAAG;AAAElB,QAAAA,KAAK,EAALA,KAAF;AAASC,QAAAA,QAAQ,EAARA;AAAT,OAAtB;AAEA,aACE,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,IAAX;AAAgB,QAAA,EAAE,EAAC,IAAnB;AAAwB,QAAA,SAAS,EAAC,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,qCAGkC,GAHlC,EAIE,oBAAC,OAAD;AACE,QAAA,KAAK,EAAE;AAAEkB,UAAAA,cAAc,EAAE;AAAlB,SADT;AAEE,QAAA,EAAE,kBAFJ;AAGE,QAAA,SAAS,EAAC,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,MAFF,CADF,EAiBE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,EAAE,KAAX;AAAkB,QAAA,SAAS,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,EAQE,oBAAC,MAAD;AAAQ,QAAA,aAAa,EAAED,aAAvB;AAAsC,QAAA,QAAQ,EAAE,KAAKtB,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA,YAAGwB,MAAH,QAAGA,MAAH;AAAA,eACC,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAC,iCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAC,4BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,YAAD;AAAc,UAAA,EAAE,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,EAIE,oBAAC,KAAD;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,QAAQ,EAAE,MAAI,CAACR,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EASGQ,MAAM,CAACpB,KAAP,IAAgBW,YAAhB,IACC;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGS,MAAM,CAACpB,KADV,CAVJ,CADF,EAgBE,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAC,4BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,YAAD;AAAc,UAAA,EAAE,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,EAIE,oBAAC,KAAD;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,QAAQ,EAAE,MAAI,CAACgB,gBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EAUGI,MAAM,CAACnB,QAAP,IAAmBU,YAAnB,IACC;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGS,MAAM,CAACnB,QADV,CAXJ,CAhBF,EAgCE;AAAK,UAAA,SAAS,EAAC,mDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AACE,UAAA,KAAK,EAAE;AAAEkB,YAAAA,cAAc,EAAE;AAAlB,WADT;AAEE,UAAA,EAAE,yBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIE,oBAAC,YAAD;AAAc,UAAA,EAAE,EAAC,+BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CADF,EAOE,oBAAC,MAAD;AACE,UAAA,KAAK,EAAC,SADR;AAEE,UAAA,SAAS,0CACPpB,OAAO,GAAG,cAAH,GAAoB,EADpB,CAFX;AAKE,UAAA,IAAI,EAAC,IALP;AAME,UAAA,IAAI,EAAC,QANP;AAOE,UAAA,OAAO,EAAE,iBAAAU,KAAK;AAAA,mBAAI,MAAI,CAACD,cAAL,CAAoBC,KAApB,CAAJ;AAAA,WAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WASE;AAAM,UAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CATF,EAcE;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,YAAD;AAAc,UAAA,EAAE,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAdF,CAPF,CAhCF,CADD;AAAA,OADH,CARF,CAjBF,CADF,CADF,CADF;AAgGD;;;;EAtKiBhC,S;;AAwKpB,IAAM4C,eAAe,GAAG,SAAlBA,eAAkB,QAAkB;AAAA,MAAfC,QAAe,SAAfA,QAAe;AAAA,MAChCf,KADgC,GACtBe,QADsB,CAChCf,KADgC;AAExC,SAAO;AAAEA,IAAAA,KAAK,EAALA;AAAF,GAAP;AACD,CAHD;;AAKA,eAAetB,OAAO,CAACoC,eAAD,EAAkB;AACtC9B,EAAAA,iBAAiB,EAAjBA;AADsC,CAAlB,CAAP,CAEZG,KAFY,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { NotificationManager } from \"../../components/common/react-notifications\";\r\nimport { login } from \"../../helpers/Server/Auth\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { authenticateAsync } from \"../../redux/actions\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      loginClicked: false,\r\n      loading: false\r\n    };\r\n  }\r\n\r\n  onUserLogin = values => {\r\n    if (!this.state.loading) {\r\n      if (values.email !== \"\" && values.password !== \"\") {\r\n        this.setLoading(true);\r\n        const serverCall = () => login(values);\r\n        this.props.authenticateAsync(\r\n          serverCall,\r\n          () => {\r\n            this.setLoading(false);\r\n            this.props.history.push(\"/\");\r\n          },\r\n          message => {\r\n            this.setLoading(false);\r\n            NotificationManager.error(\r\n              message,\r\n              \"Login Failed\",\r\n              3000,\r\n              null,\r\n              null,\r\n              \"\"\r\n            );\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  onLoginClicked = event => {\r\n    this.setState({ loginClicked: true });\r\n  };\r\n\r\n  validateEmail = value => {\r\n    let error;\r\n    if (!value) {\r\n      error = \"Please enter your email address\";\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n      error = \"Invalid email address\";\r\n    }\r\n    return error;\r\n  };\r\n\r\n  setLoading = isLoading => {\r\n    this.setState({ loading: isLoading });\r\n  };\r\n\r\n  validatePassword = value => {\r\n    let error;\r\n    if (!value) {\r\n      error = \"Please enter your password\";\r\n    } else if (value.length < 4) {\r\n      error = \"Value must be longer than 3 characters\";\r\n    }\r\n    return error;\r\n  };\r\n\r\n  render() {\r\n    const { password, email, loginClicked, loading } = this.state;\r\n    const initialValues = { email, password };\r\n\r\n    return (\r\n      <Row className=\"h-100\">\r\n        <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\r\n          <Card className=\"auth-card\">\r\n            <div className=\"position-relative image-side \">\r\n              <p className=\"text-white h2\">MAGIC IS IN THE DETAILS</p>\r\n              <p className=\"white mb-0\">\r\n                Please use your credentials to login.\r\n                <br />\r\n                If you are not a member, please{\" \"}\r\n                <NavLink\r\n                  style={{ textDecoration: \"underline\" }}\r\n                  to={`/user/register`}\r\n                  className=\"white\"\r\n                >\r\n                  register\r\n                </NavLink>\r\n                .\r\n              </p>\r\n            </div>\r\n            <div className=\"form-side\">\r\n              <NavLink to={`/`} className=\"white\">\r\n                <span className=\"logo-single\" />\r\n              </NavLink>\r\n              <CardTitle className=\"mb-4\">\r\n                <IntlMessages id=\"user.login-title\" />\r\n              </CardTitle>\r\n\r\n              <Formik initialValues={initialValues} onSubmit={this.onUserLogin}>\r\n                {({ errors }) => (\r\n                  <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                    <FormGroup className=\"form-group has-float-label\">\r\n                      <Label>\r\n                        <IntlMessages id=\"user.email\" />\r\n                      </Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        validate={this.validateEmail}\r\n                      />\r\n                      {errors.email && loginClicked && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.email}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                    <FormGroup className=\"form-group has-float-label\">\r\n                      <Label>\r\n                        <IntlMessages id=\"user.password\" />\r\n                      </Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        validate={this.validatePassword}\r\n                      />\r\n                      {errors.password && loginClicked && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.password}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                      <NavLink\r\n                        style={{ textDecoration: \"underline\" }}\r\n                        to={`/user/forgot-password`}\r\n                      >\r\n                        <IntlMessages id=\"user.forgot-password-question\" />\r\n                      </NavLink>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          loading ? \"show-spinner\" : \"\"\r\n                        }`}\r\n                        size=\"lg\"\r\n                        type=\"submit\"\r\n                        onClick={event => this.onLoginClicked(event)}\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">\r\n                          <IntlMessages id=\"user.login-button\" />\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const { error } = authUser;\r\n  return { error };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  authenticateAsync\r\n})(Login);\r\n"]},"metadata":{},"sourceType":"module"}