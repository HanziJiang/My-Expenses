{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport { POST_EXPENDITURE_SUCCEED, POST_EXPENDITURE_ERROR } from \"./types\";\nimport { userStorageKey } from \"../../constants/storage\";\nexport var postExpenditureAsync = function postExpenditureAsync(serverCall, doneCallback) {\n  var errorCallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (error) {};\n  return function _callee(dispatch) {\n    var response, error, user, _error;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(serverCall());\n\n          case 3:\n            response = _context.sent;\n\n            if (response.data.succeed) {\n              _context.next = 9;\n              break;\n            }\n\n            error = response.data.message;\n            dispatch({\n              type: POST_EXPENDITURE_ERROR,\n              payload: error\n            });\n            errorCallback(error);\n            return _context.abrupt(\"return\");\n\n          case 9:\n            user = response.data.content;\n            sessionStorage.setItem(userStorageKey.token, user.token);\n            sessionStorage.setItem(userStorageKey.firstName, user.firstName);\n            sessionStorage.setItem(userStorageKey.lastName, user.lastName);\n            dispatch({\n              type: AUTH_USER,\n              payload: {\n                authenticated: user.token,\n                firstName: user.firstName,\n                lastName: user.lastName\n              }\n            });\n            doneCallback();\n            _context.next = 22;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](0);\n            _error = \"Something went wrong. Please try again later.\";\n            dispatch({\n              type: AUTH_ERROR,\n              payload: _error\n            });\n            errorCallback(_error);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 17]]);\n  };\n};\nexport var deleteExpensesAsync = function deleteExpensesAsync(serverCall, doneCallback) {\n  var errorCallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (error) {};\n  return function _callee2(dispatch) {\n    var response, error, user, _error2;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(serverCall());\n\n          case 3:\n            response = _context2.sent;\n\n            if (response.data.succeed) {\n              _context2.next = 9;\n              break;\n            }\n\n            error = response.data.message;\n            dispatch({\n              type: POST_EXPENDITURE_ERROR,\n              payload: error\n            });\n            errorCallback(error);\n            return _context2.abrupt(\"return\");\n\n          case 9:\n            user = response.data.content;\n            sessionStorage.setItem(userStorageKey.token, user.token);\n            sessionStorage.setItem(userStorageKey.firstName, user.firstName);\n            sessionStorage.setItem(userStorageKey.lastName, user.lastName);\n            dispatch({\n              type: AUTH_USER,\n              payload: {\n                authenticated: user.token,\n                firstName: user.firstName,\n                lastName: user.lastName\n              }\n            });\n            doneCallback();\n            _context2.next = 22;\n            break;\n\n          case 17:\n            _context2.prev = 17;\n            _context2.t0 = _context2[\"catch\"](0);\n            _error2 = \"Something went wrong. Please try again later.\";\n            dispatch({\n              type: AUTH_ERROR,\n              payload: _error2\n            });\n            errorCallback(_error2);\n\n          case 22:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 17]]);\n  };\n};","map":{"version":3,"sources":["/Users/kaka/Desktop/my-expenses/web/src/redux/expenditure/actions.js"],"names":["POST_EXPENDITURE_SUCCEED","POST_EXPENDITURE_ERROR","userStorageKey","postExpenditureAsync","serverCall","doneCallback","errorCallback","error","dispatch","response","data","succeed","message","type","payload","user","content","sessionStorage","setItem","token","firstName","lastName","AUTH_USER","authenticated","AUTH_ERROR","deleteExpensesAsync"],"mappings":"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","sourcesContent":["import { POST_EXPENDITURE_SUCCEED, POST_EXPENDITURE_ERROR } from \"./types\";\nimport { userStorageKey } from \"../../constants/storage\";\n\nexport const postExpenditureAsync = (\n  serverCall,\n  doneCallback,\n  errorCallback = error => {}\n) => async dispatch => {\n  try {\n    const response = await serverCall();\n    if (!response.data.succeed) {\n      const error = response.data.message;\n      dispatch({ type: POST_EXPENDITURE_ERROR, payload: error });\n      errorCallback(error);\n      return;\n    }\n\n    const user = response.data.content;\n\n    sessionStorage.setItem(userStorageKey.token, user.token);\n    sessionStorage.setItem(userStorageKey.firstName, user.firstName);\n    sessionStorage.setItem(userStorageKey.lastName, user.lastName);\n\n    dispatch({\n      type: AUTH_USER,\n      payload: {\n        authenticated: user.token,\n        firstName: user.firstName,\n        lastName: user.lastName\n      }\n    });\n    doneCallback();\n  } catch (err) {\n    const error = \"Something went wrong. Please try again later.\";\n    dispatch({ type: AUTH_ERROR, payload: error });\n    errorCallback(error);\n  }\n};\n\nexport const deleteExpensesAsync = (\n         serverCall,\n         doneCallback,\n         errorCallback = error => {}\n       ) => async dispatch => {\n         try {\n           const response = await serverCall();\n           if (!response.data.succeed) {\n             const error = response.data.message;\n             dispatch({ type: POST_EXPENDITURE_ERROR, payload: error });\n             errorCallback(error);\n             return;\n           }\n\n           const user = response.data.content;\n\n           sessionStorage.setItem(userStorageKey.token, user.token);\n           sessionStorage.setItem(userStorageKey.firstName, user.firstName);\n           sessionStorage.setItem(userStorageKey.lastName, user.lastName);\n\n           dispatch({\n             type: AUTH_USER,\n             payload: {\n               authenticated: user.token,\n               firstName: user.firstName,\n               lastName: user.lastName\n             }\n           });\n           doneCallback();\n         } catch (err) {\n           const error = \"Something went wrong. Please try again later.\";\n           dispatch({ type: AUTH_ERROR, payload: error });\n           errorCallback(error);\n         }\n       };\n"]},"metadata":{},"sourceType":"module"}