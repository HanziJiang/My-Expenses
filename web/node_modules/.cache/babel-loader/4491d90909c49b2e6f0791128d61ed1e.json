{"ast":null,"code":"import _toConsumableArray from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kaka/Desktop/my-expenses/web/src/views/app/categories/browseAll/index.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Row } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport DataListView from \"./DataListView\";\nimport { NotificationManager } from \"../../../../components/common/react-notifications\";\nimport Pagination from \"../../../../components/Pagination\";\nimport ListPageHeading from \"../../../../components/ListPageHeading\";\nimport AddNewModal from \"./AddNewModal\";\nimport { getCategories, deleteCategories } from \"../../../../helpers/Server/Category\";\nimport { getCategoriesAsync, deleteCategoriesAsync } from \"../../../../redux/actions\";\n\nvar BrowseAll =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BrowseAll, _Component);\n\n  function BrowseAll(props) {\n    var _this;\n\n    _classCallCheck(this, BrowseAll);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BrowseAll).call(this, props));\n\n    _this.toggleModal = function () {\n      _this.setState({\n        modalOpen: !_this.state.modalOpen\n      });\n    };\n\n    _this.changeOrderBy = function (column) {\n      _this.setState({\n        selectedOrderOption: _this.state.orderOptions.find(function (x) {\n          return x.column === column;\n        })\n      }, function () {\n        return _this.dataListRender();\n      });\n    };\n\n    _this.onChangePage = function (page) {\n      _this.setState({\n        currentPage: page\n      }, function () {\n        return _this.dataListRender();\n      });\n    };\n\n    _this.onSearchKey = function (e) {\n      if (e.key === \"Enter\") {\n        _this.setState({\n          search: e.target.value.toLowerCase()\n        }, function () {\n          return _this.dataListRender();\n        });\n      }\n    };\n\n    _this.onCheckCategory = function (event, id) {\n      if (event.target.tagName === \"A\" || event.target.parentElement && event.target.parentElement.tagName === \"A\") {\n        return true;\n      }\n\n      if (_this.state.lastChecked === null) {\n        _this.setState({\n          lastChecked: id\n        });\n      }\n\n      var selectedExpenses = _this.state.selectedExpenses;\n\n      if (selectedExpenses.includes(id)) {\n        selectedExpenses = selectedExpenses.filter(function (x) {\n          return x !== id;\n        });\n      } else {\n        selectedExpenses.push(id);\n      }\n\n      _this.setState({\n        selectedCategories: selectedExpenses\n      });\n\n      if (event.shiftKey) {\n        var _selectedExpenses;\n\n        var categories = _this.props.categories;\n\n        var start = _this.getIndex(id, categories, \"id\");\n\n        var end = _this.getIndex(_this.state.lastChecked, categories, \"id\");\n\n        categories = categories.slice(Math.min(start, end), Math.max(start, end) + 1);\n\n        (_selectedExpenses = selectedExpenses).push.apply(_selectedExpenses, _toConsumableArray(categories.map(function (category) {\n          return category._id;\n        })));\n\n        selectedExpenses = Array.from(new Set(selectedExpenses));\n\n        _this.setState({\n          selectedCategories: selectedExpenses\n        });\n      }\n\n      document.activeElement.blur();\n    };\n\n    _this.updateCategories = function () {\n      var skipEntries = (_this.state.currentPage - 1) * _this.state.pageSize;\n\n      var serverCall = function serverCall() {\n        return getCategories({\n          skipEntries: skipEntries,\n          pageSize: _this.state.pageSize\n        });\n      };\n\n      _this.setState({\n        isLoading: true\n      });\n\n      _this.props.getCategoriesAsync(serverCall, function () {\n        _this.setState({\n          selectedCategories: [],\n          isLoading: false,\n          totalPage: Math.ceil(_this.props.totalCategoriesCount / _this.state.pageSize)\n        });\n      }, function (succeed, message) {\n        _this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    _this.handleChangeSelectAll = function (isToggle) {\n      if (_this.state.selectedExpenses.length >= _this.props.totalCategoriesCount) {\n        if (isToggle) {\n          _this.setState({\n            selectedCategories: []\n          });\n        }\n      } else {\n        _this.setState({\n          selectedCategories: _this.props.categories.map(function (x) {\n            return x._id;\n          })\n        });\n      }\n\n      document.activeElement.blur();\n      return false;\n    };\n\n    _this.handleDelete = function () {\n      if (!_this.isLoading && _this.selectedCategoriesLength != 0) {\n        var serverCall = function serverCall() {\n          return deleteCategories({\n            categoryIDs: _this.state.selectedExpenses\n          });\n        };\n\n        _this.setState({\n          isLoading: true\n        });\n\n        _this.props.deleteCategoriesAsync(serverCall, function () {\n          _this.setState({\n            isLoading: false\n          });\n\n          _this.updateCategories();\n        }, function (succeed, message) {\n          _this.setState({\n            isLoading: false\n          });\n\n          if (succeed) {\n            NotificationManager.success(message, \"Success\", 3000, null, null, \"\");\n          } else {\n            NotificationManager.error(message, \"Create Category Fail\", 3000, null, null, \"\");\n          }\n        });\n      }\n    };\n\n    _this.mouseTrap = require(\"mousetrap\");\n    _this.state = {\n      pageSize: 5,\n      orderOptions: [{\n        column: \"title\",\n        label: \"Category Name\"\n      }, {\n        column: \"date\",\n        label: \"Date Created\"\n      }],\n      selectedOrderOption: {\n        column: \"title\",\n        label: \"Category Name\"\n      },\n      dropdownSplitOpen: false,\n      modalOpen: false,\n      currentPage: 1,\n      totalPage: 1,\n      search: \"\",\n      selectedExpenses: [],\n      lastChecked: null,\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(BrowseAll, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.dataListRender();\n      this.mouseTrap.bind([\"ctrl+a\", \"command+a\"], function () {\n        return _this2.handleChangeSelectAll(false);\n      });\n      this.mouseTrap.bind([\"ctrl+d\", \"command+d\"], function () {\n        _this2.setState({\n          selectedExpenses: []\n        });\n\n        return false;\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mouseTrap.unbind(\"ctrl+a\");\n      this.mouseTrap.unbind(\"command+a\");\n      this.mouseTrap.unbind(\"ctrl+d\");\n      this.mouseTrap.unbind(\"command+d\");\n    }\n  }, {\n    key: \"getIndex\",\n    value: function getIndex(value, arr, prop) {\n      for (var i = 0; i < arr.length; i++) {\n        if (arr[i][prop] === value) {\n          return i;\n        }\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"dataListRender\",\n    value: function dataListRender() {\n      this.updateCategories();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          currentPage = _this$state.currentPage,\n          selectedOrderOption = _this$state.selectedOrderOption,\n          selectedCategories = _this$state.selectedExpenses,\n          orderOptions = _this$state.orderOptions,\n          pageSize = _this$state.pageSize;\n      var match = this.props.match;\n      var startIndex = (currentPage - 1) * this.state.pageSize + 1;\n      var endIndex = Math.min(this.props.totalCategoriesCount, startIndex + pageSize - 1);\n      return this.state.isLoading ? React.createElement(\"div\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }) : React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"disable-text-selection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(ListPageHeading, {\n        heading: \"menu.categories\",\n        handleDelete: this.handleDelete,\n        handleChangeSelectAll: this.handleChangeSelectAll,\n        changeOrderBy: this.changeOrderBy,\n        changePageSize: this.changePageSize,\n        pageSize: this.state.pageSize,\n        totalItemsCount: this.props.totalCategoriesCount,\n        selectedOrderOption: selectedOrderOption,\n        match: match,\n        startIndex: startIndex,\n        endIndex: endIndex,\n        selectedItemsLength: selectedCategories ? selectedCategories.length : 0,\n        onSearchKey: this.onSearchKey,\n        orderOptions: orderOptions,\n        toggleModal: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }), React.createElement(AddNewModal, {\n        modalOpen: this.state.modalOpen,\n        toggleModal: this.toggleModal,\n        updateCategories: this.updateCategories,\n        categories: this.props.categories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, this.props.categories.map(function (category) {\n        return React.createElement(DataListView, {\n          key: category._id,\n          category: category,\n          isSelect: _this3.state.selectedExpenses.includes(category._id),\n          onCheckCategory: _this3.onCheckCategory,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        });\n      }), \" \", React.createElement(Pagination, {\n        currentPage: this.state.currentPage,\n        totalPage: this.state.totalPage,\n        onChangePage: function onChangePage(i) {\n          return _this3.onChangePage(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      return {\n        totalPage: Math.ceil(nextProps.totalCategoriesCount / prevState.pageSize)\n      };\n    }\n  }]);\n\n  return BrowseAll;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    categories: state.category.categories,\n    totalCategoriesCount: state.category.totalCategoriesCount,\n    error: state.category.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCategoriesAsync: getCategoriesAsync,\n  deleteCategoriesAsync: deleteCategoriesAsync\n})(BrowseAll);","map":{"version":3,"sources":["/Users/kaka/Desktop/my-expenses/web/src/views/app/categories/browseAll/index.js"],"names":["React","Component","Fragment","Row","connect","DataListView","NotificationManager","Pagination","ListPageHeading","AddNewModal","getCategories","deleteCategories","getCategoriesAsync","deleteCategoriesAsync","BrowseAll","props","toggleModal","setState","modalOpen","state","changeOrderBy","column","selectedOrderOption","orderOptions","find","x","dataListRender","onChangePage","page","currentPage","onSearchKey","e","key","search","target","value","toLowerCase","onCheckCategory","event","id","tagName","parentElement","lastChecked","selectedExpenses","includes","filter","push","selectedCategories","shiftKey","categories","start","getIndex","end","slice","Math","min","max","map","category","_id","Array","from","Set","document","activeElement","blur","updateCategories","skipEntries","pageSize","serverCall","isLoading","totalPage","ceil","totalCategoriesCount","succeed","message","handleChangeSelectAll","isToggle","length","handleDelete","selectedCategoriesLength","categoryIDs","success","error","mouseTrap","require","label","dropdownSplitOpen","bind","unbind","arr","prop","i","match","startIndex","endIndex","changePageSize","nextProps","prevState","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Row } from \"reactstrap\";\nimport { connect } from \"react-redux\";\n\nimport DataListView from \"./DataListView\";\nimport { NotificationManager } from \"../../../../components/common/react-notifications\";\nimport Pagination from \"../../../../components/Pagination\";\nimport ListPageHeading from \"../../../../components/ListPageHeading\";\nimport AddNewModal from \"./AddNewModal\";\nimport {\n  getCategories,\n  deleteCategories\n} from \"../../../../helpers/Server/Category\";\nimport {\n  getCategoriesAsync,\n  deleteCategoriesAsync\n} from \"../../../../redux/actions\";\n\nclass BrowseAll extends Component {\n  constructor(props) {\n    super(props);\n    this.mouseTrap = require(\"mousetrap\");\n\n    this.state = {\n      pageSize: 5,\n      orderOptions: [\n        { column: \"title\", label: \"Category Name\" },\n        { column: \"date\", label: \"Date Created\" }\n      ],\n\n      selectedOrderOption: { column: \"title\", label: \"Category Name\" },\n      dropdownSplitOpen: false,\n      modalOpen: false,\n      currentPage: 1,\n      totalPage: 1,\n      search: \"\",\n      selectedExpenses: [],\n      lastChecked: null,\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.dataListRender();\n    this.mouseTrap.bind([\"ctrl+a\", \"command+a\"], () =>\n      this.handleChangeSelectAll(false)\n    );\n    this.mouseTrap.bind([\"ctrl+d\", \"command+d\"], () => {\n      this.setState({\n        selectedExpenses: []\n      });\n      return false;\n    });\n  }\n\n  componentWillUnmount() {\n    this.mouseTrap.unbind(\"ctrl+a\");\n    this.mouseTrap.unbind(\"command+a\");\n    this.mouseTrap.unbind(\"ctrl+d\");\n    this.mouseTrap.unbind(\"command+d\");\n  }\n\n  toggleModal = () => {\n    this.setState({\n      modalOpen: !this.state.modalOpen\n    });\n  };\n\n  changeOrderBy = column => {\n    this.setState(\n      {\n        selectedOrderOption: this.state.orderOptions.find(\n          x => x.column === column\n        )\n      },\n      () => this.dataListRender()\n    );\n  };\n\n  onChangePage = page => {\n    this.setState(\n      {\n        currentPage: page\n      },\n      () => this.dataListRender()\n    );\n  };\n\n  onSearchKey = e => {\n    if (e.key === \"Enter\") {\n      this.setState(\n        {\n          search: e.target.value.toLowerCase()\n        },\n        () => this.dataListRender()\n      );\n    }\n  };\n\n  onCheckCategory = (event, id) => {\n    if (\n      event.target.tagName === \"A\" ||\n      (event.target.parentElement && event.target.parentElement.tagName === \"A\")\n    ) {\n      return true;\n    }\n    if (this.state.lastChecked === null) {\n      this.setState({\n        lastChecked: id\n      });\n    }\n\n    let selectedExpenses = this.state.selectedExpenses;\n    if (selectedExpenses.includes(id)) {\n      selectedExpenses = selectedExpenses.filter(x => x !== id);\n    } else {\n      selectedExpenses.push(id);\n    }\n    this.setState({\n      selectedCategories: selectedExpenses\n    });\n\n    if (event.shiftKey) {\n      var categories = this.props.categories;\n      var start = this.getIndex(id, categories, \"id\");\n      var end = this.getIndex(this.state.lastChecked, categories, \"id\");\n      categories = categories.slice(\n        Math.min(start, end),\n        Math.max(start, end) + 1\n      );\n      selectedExpenses.push(\n        ...categories.map(category => {\n          return category._id;\n        })\n      );\n      selectedExpenses = Array.from(new Set(selectedExpenses));\n      this.setState({\n        selectedCategories: selectedExpenses\n      });\n    }\n    document.activeElement.blur();\n  };\n\n  getIndex(value, arr, prop) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i][prop] === value) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  updateCategories = () => {\n    const skipEntries = (this.state.currentPage - 1) * this.state.pageSize;\n    const serverCall = () =>\n      getCategories({ skipEntries, pageSize: this.state.pageSize });\n    this.setState({ isLoading: true });\n    this.props.getCategoriesAsync(\n      serverCall,\n      () => {\n        this.setState({\n          selectedCategories: [],\n          isLoading: false,\n          totalPage: Math.ceil(\n            this.props.totalCategoriesCount / this.state.pageSize\n          )\n        });\n      },\n      (succeed, message) => {\n        this.setState({ isLoading: false });\n      }\n    );\n  };\n\n  handleChangeSelectAll = isToggle => {\n    if (\n      this.state.selectedExpenses.length >= this.props.totalCategoriesCount\n    ) {\n      if (isToggle) {\n        this.setState({\n          selectedCategories: []\n        });\n      }\n    } else {\n      this.setState({\n        selectedCategories: this.props.categories.map(x => x._id)\n      });\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  dataListRender() {\n    this.updateCategories();\n  }\n\n  handleDelete = () => {\n    if (!this.isLoading && this.selectedCategoriesLength != 0) {\n      const serverCall = () =>\n        deleteCategories({ categoryIDs: this.state.selectedExpenses });\n      this.setState({ isLoading: true });\n      this.props.deleteCategoriesAsync(\n        serverCall,\n        () => {\n          this.setState({ isLoading: false });\n          this.updateCategories();\n        },\n        (succeed, message) => {\n          this.setState({ isLoading: false });\n          if (succeed) {\n            NotificationManager.success(\n              message,\n              \"Success\",\n              3000,\n              null,\n              null,\n              \"\"\n            );\n          } else {\n            NotificationManager.error(\n              message,\n              \"Create Category Fail\",\n              3000,\n              null,\n              null,\n              \"\"\n            );\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    const {\n      currentPage,\n      selectedOrderOption,\n      selectedExpenses: selectedCategories,\n      orderOptions,\n      pageSize\n    } = this.state;\n    const { match } = this.props;\n    const startIndex = (currentPage - 1) * this.state.pageSize + 1;\n    const endIndex = Math.min(\n      this.props.totalCategoriesCount,\n      startIndex + pageSize - 1\n    );\n\n    return this.state.isLoading ? (\n      <div className=\"loading\" />\n    ) : (\n      <Fragment>\n        <div className=\"disable-text-selection\">\n          <ListPageHeading\n            heading=\"menu.categories\"\n            handleDelete={this.handleDelete}\n            handleChangeSelectAll={this.handleChangeSelectAll}\n            changeOrderBy={this.changeOrderBy}\n            changePageSize={this.changePageSize}\n            pageSize={this.state.pageSize}\n            totalItemsCount={this.props.totalCategoriesCount}\n            selectedOrderOption={selectedOrderOption}\n            match={match}\n            startIndex={startIndex}\n            endIndex={endIndex}\n            selectedItemsLength={\n              selectedCategories ? selectedCategories.length : 0\n            }\n            onSearchKey={this.onSearchKey}\n            orderOptions={orderOptions}\n            toggleModal={this.toggleModal}\n          />\n          <AddNewModal\n            modalOpen={this.state.modalOpen}\n            toggleModal={this.toggleModal}\n            updateCategories={this.updateCategories}\n            categories={this.props.categories}\n          />\n          <Row>\n            {this.props.categories.map(category => {\n              return (\n                <DataListView\n                  key={category._id}\n                  category={category}\n                  isSelect={this.state.selectedExpenses.includes(\n                    category._id\n                  )}\n                  onCheckCategory={this.onCheckCategory}\n                />\n              );\n            })}{\" \"}\n            <Pagination\n              currentPage={this.state.currentPage}\n              totalPage={this.state.totalPage}\n              onChangePage={i => this.onChangePage(i)}\n            />\n          </Row>\n        </div>\n      </Fragment>\n    );\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    return {\n      totalPage: Math.ceil(nextProps.totalCategoriesCount / prevState.pageSize)\n    };\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.category.categories,\n    totalCategoriesCount: state.category.totalCategoriesCount,\n    error: state.category.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCategoriesAsync,\n  deleteCategoriesAsync\n})(BrowseAll);\n"]},"metadata":{},"sourceType":"module"}