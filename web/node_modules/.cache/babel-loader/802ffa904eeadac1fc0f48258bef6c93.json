{"ast":null,"code":"import _toConsumableArray from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kaka/Desktop/my-expenses/web/src/views/app/expenses/browseAll/index.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Row } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport DataListView from \"./DataListView\";\nimport { NotificationManager } from \"../../../../components/common/react-notifications\";\nimport Pagination from \"../../../../components/Pagination\";\nimport ListPageHeading from \"../../../../components/ListPageHeading\";\nimport AddNewModal from \"./AddNewModal\";\nimport { getExpenses, deleteExpenses } from \"../../../../helpers/Server/Expense\";\nimport { getExpensesAsync, deleteExpensesAsync } from \"../../../../redux/actions\";\n\nvar BrowseAll =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BrowseAll, _Component);\n\n  function BrowseAll(props) {\n    var _this;\n\n    _classCallCheck(this, BrowseAll);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BrowseAll).call(this, props));\n\n    _this.toggleModal = function () {\n      _this.setState({\n        modalOpen: !_this.state.modalOpen\n      });\n    };\n\n    _this.changeOrderBy = function (column) {\n      _this.setState({\n        selectedOrderOption: _this.state.orderOptions.find(function (x) {\n          return x.column === column;\n        })\n      }, function () {\n        return _this.dataListRender();\n      });\n    };\n\n    _this.onChangePage = function (page) {\n      _this.setState({\n        currentPage: page\n      }, function () {\n        return _this.dataListRender();\n      });\n    };\n\n    _this.onSearchKey = function (e) {\n      if (e.key === \"Enter\") {\n        _this.setState({\n          search: e.target.value.toLowerCase()\n        }, function () {\n          return _this.dataListRender();\n        });\n      }\n    };\n\n    _this.onCheckExpense = function (event, id) {\n      if (event.target.tagName === \"A\" || event.target.parentElement && event.target.parentElement.tagName === \"A\") {\n        return true;\n      }\n\n      if (_this.state.lastChecked === null) {\n        _this.setState({\n          lastChecked: id\n        });\n      }\n\n      var selectedExpenses = _this.state.selectedExpenses;\n\n      if (selectedExpenses.includes(id)) {\n        selectedExpenses = selectedExpenses.filter(function (x) {\n          return x !== id;\n        });\n      } else {\n        selectedExpenses.push(id);\n      }\n\n      _this.setState({\n        selectedExpenses: selectedExpenses\n      });\n\n      if (event.shiftKey) {\n        var _selectedExpenses;\n\n        var expenses = _this.props.expenses;\n\n        var start = _this.getIndex(id, expenses, \"id\");\n\n        var end = _this.getIndex(_this.state.lastChecked, expenses, \"id\");\n\n        expenses = expenses.slice(Math.min(start, end), Math.max(start, end) + 1);\n\n        (_selectedExpenses = selectedExpenses).push.apply(_selectedExpenses, _toConsumableArray(expenses.map(function (expense) {\n          return expense._id;\n        })));\n\n        selectedExpenses = Array.from(new Set(selectedExpenses));\n\n        _this.setState({\n          selectedExpenses: selectedExpenses\n        });\n      }\n\n      document.activeElement.blur();\n    };\n\n    _this.updateExpenses = function () {\n      var skipEntries = (_this.state.currentPage - 1) * _this.state.pageSize;\n\n      var serverCall = function serverCall() {\n        return getExpenses({\n          skipEntries: skipEntries,\n          pageSize: _this.state.pageSize\n        });\n      };\n\n      _this.setState({\n        isLoading: true\n      });\n\n      _this.props.getExpensesAsync(serverCall, function () {\n        _this.setState({\n          selectedExpenses: [],\n          isLoading: false,\n          totalPage: Math.ceil(_this.props.totalExpensesCount / _this.state.pageSize)\n        });\n      }, function (succeed, message) {\n        _this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    _this.handleChangeSelectAll = function (isToggle) {\n      if (_this.state.selectedExpenses.length >= _this.props.totalExpensesCount) {\n        if (isToggle) {\n          _this.setState({\n            selectedExpenses: []\n          });\n        }\n      } else {\n        _this.setState({\n          selectedExpenses: _this.props.expenses.map(function (x) {\n            return x._id;\n          })\n        });\n      }\n\n      document.activeElement.blur();\n      return false;\n    };\n\n    _this.handleDelete = function () {\n      if (!_this.isLoading && _this.selectedExpensesLength !== 0) {\n        var serverCall = function serverCall() {\n          return deleteExpenses({\n            expenseIDs: _this.state.selectedExpenses\n          });\n        };\n\n        _this.setState({\n          isLoading: true\n        });\n\n        _this.props.deleteExpensesAsync(serverCall, function () {\n          _this.setState({\n            isLoading: false\n          });\n\n          _this.updateExpenses();\n        }, function (succeed, message) {\n          _this.setState({\n            isLoading: false\n          });\n\n          if (succeed) {\n            NotificationManager.success(message, \"Success\", 3000, null, null, \"\");\n          } else {\n            NotificationManager.error(message, \"Create Expense Fail\", 3000, null, null, \"\");\n          }\n        });\n      }\n    };\n\n    _this.mouseTrap = require(\"mousetrap\");\n    _this.state = {\n      pageSize: 5,\n      orderOptions: [{\n        column: \"title\",\n        label: \"Title\"\n      }, {\n        column: \"date\",\n        label: \"Date Created\"\n      }],\n      selectedOrderOption: {\n        column: \"title\",\n        label: \"Title\"\n      },\n      dropdownSplitOpen: false,\n      modalOpen: false,\n      currentPage: 1,\n      totalPage: 1,\n      search: \"\",\n      selectedExpenses: [],\n      lastChecked: null,\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(BrowseAll, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.dataListRender();\n      this.mouseTrap.bind([\"ctrl+a\", \"command+a\"], function () {\n        return _this2.handleChangeSelectAll(false);\n      });\n      this.mouseTrap.bind([\"ctrl+d\", \"command+d\"], function () {\n        _this2.setState({\n          selectedExpenses: []\n        });\n\n        return false;\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mouseTrap.unbind(\"ctrl+a\");\n      this.mouseTrap.unbind(\"command+a\");\n      this.mouseTrap.unbind(\"ctrl+d\");\n      this.mouseTrap.unbind(\"command+d\");\n    }\n  }, {\n    key: \"getIndex\",\n    value: function getIndex(value, arr, prop) {\n      for (var i = 0; i < arr.length; i++) {\n        if (arr[i][prop] === value) {\n          return i;\n        }\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"dataListRender\",\n    value: function dataListRender() {\n      this.updateExpenses();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          currentPage = _this$state.currentPage,\n          selectedOrderOption = _this$state.selectedOrderOption,\n          selectedExpenses = _this$state.selectedExpenses,\n          orderOptions = _this$state.orderOptions,\n          pageSize = _this$state.pageSize;\n      var match = this.props.match;\n      var startIndex = (currentPage - 1) * this.state.pageSize + 1;\n      var endIndex = Math.min(this.props.totalExpensesCount, startIndex + pageSize - 1);\n      return this.state.isLoading ? React.createElement(\"div\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }) : React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"disable-text-selection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(ListPageHeading, {\n        heading: \"menu.expenses\",\n        handleDelete: this.handleDelete,\n        handleChangeSelectAll: this.handleChangeSelectAll,\n        changeOrderBy: this.changeOrderBy,\n        pageSize: this.state.pageSize,\n        totalItemsCount: this.props.totalExpensesCount,\n        selectedOrderOption: selectedOrderOption,\n        match: match,\n        startIndex: startIndex,\n        endIndex: endIndex,\n        selectedItemsLength: selectedExpenses ? selectedExpenses.length : 0,\n        onSearchKey: this.onSearchKey,\n        orderOptions: orderOptions,\n        toggleModal: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), React.createElement(AddNewModal, {\n        categoryOptions: this.state,\n        modalOpen: this.state.modalOpen,\n        toggleModal: this.toggleModal,\n        updateExpenses: this.updateExpenses,\n        expenses: this.props.expenses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, this.props.expenses.map(function (expense) {\n        return React.createElement(DataListView, {\n          key: expense._id,\n          expense: expense,\n          isSelect: _this3.state.selectedExpenses.includes(expense._id),\n          onCheckExpense: _this3.onCheckExpense,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        });\n      }), \" \", React.createElement(Pagination, {\n        currentPage: this.state.currentPage,\n        totalPage: this.state.totalPage,\n        onChangePage: function onChangePage(i) {\n          return _this3.onChangePage(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      return {\n        totalPage: Math.ceil(nextProps.totalExpensesCount / prevState.pageSize)\n      };\n    }\n  }]);\n\n  return BrowseAll;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    expenses: state.expense.expenses,\n    totalExpensesCount: state.expense.totalExpensesCount,\n    error: state.expense.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getExpensesAsync: getExpensesAsync,\n  deleteExpensesAsync: deleteExpensesAsync\n})(BrowseAll);","map":{"version":3,"sources":["/Users/kaka/Desktop/my-expenses/web/src/views/app/expenses/browseAll/index.js"],"names":["React","Component","Fragment","Row","connect","DataListView","NotificationManager","Pagination","ListPageHeading","AddNewModal","getExpenses","deleteExpenses","getExpensesAsync","deleteExpensesAsync","BrowseAll","props","toggleModal","setState","modalOpen","state","changeOrderBy","column","selectedOrderOption","orderOptions","find","x","dataListRender","onChangePage","page","currentPage","onSearchKey","e","key","search","target","value","toLowerCase","onCheckExpense","event","id","tagName","parentElement","lastChecked","selectedExpenses","includes","filter","push","shiftKey","expenses","start","getIndex","end","slice","Math","min","max","map","expense","_id","Array","from","Set","document","activeElement","blur","updateExpenses","skipEntries","pageSize","serverCall","isLoading","totalPage","ceil","totalExpensesCount","succeed","message","handleChangeSelectAll","isToggle","length","handleDelete","selectedExpensesLength","expenseIDs","success","error","mouseTrap","require","label","dropdownSplitOpen","bind","unbind","arr","prop","i","match","startIndex","endIndex","nextProps","prevState","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Row } from \"reactstrap\";\nimport { connect } from \"react-redux\";\n\nimport DataListView from \"./DataListView\";\nimport { NotificationManager } from \"../../../../components/common/react-notifications\";\nimport Pagination from \"../../../../components/Pagination\";\nimport ListPageHeading from \"../../../../components/ListPageHeading\";\nimport AddNewModal from \"./AddNewModal\";\nimport {\n  getExpenses,\n  deleteExpenses\n} from \"../../../../helpers/Server/Expense\";\nimport {\n  getExpensesAsync,\n  deleteExpensesAsync\n} from \"../../../../redux/actions\";\n\nclass BrowseAll extends Component {\n  constructor(props) {\n    super(props);\n    this.mouseTrap = require(\"mousetrap\");\n\n    this.state = {\n      pageSize: 5,\n      orderOptions: [\n        { column: \"title\", label: \"Title\" },\n        { column: \"date\", label: \"Date Created\" }\n      ],\n\n      selectedOrderOption: { column: \"title\", label: \"Title\" },\n      dropdownSplitOpen: false,\n      modalOpen: false,\n      currentPage: 1,\n      totalPage: 1,\n      search: \"\",\n      selectedExpenses: [],\n      lastChecked: null,\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    this.dataListRender();\n    this.mouseTrap.bind([\"ctrl+a\", \"command+a\"], () =>\n      this.handleChangeSelectAll(false)\n    );\n    this.mouseTrap.bind([\"ctrl+d\", \"command+d\"], () => {\n      this.setState({\n        selectedExpenses: []\n      });\n      return false;\n    });\n  }\n\n  componentWillUnmount() {\n    this.mouseTrap.unbind(\"ctrl+a\");\n    this.mouseTrap.unbind(\"command+a\");\n    this.mouseTrap.unbind(\"ctrl+d\");\n    this.mouseTrap.unbind(\"command+d\");\n  }\n\n  toggleModal = () => {\n    this.setState({\n      modalOpen: !this.state.modalOpen\n    });\n  };\n\n  changeOrderBy = column => {\n    this.setState(\n      {\n        selectedOrderOption: this.state.orderOptions.find(\n          x => x.column === column\n        )\n      },\n      () => this.dataListRender()\n    );\n  };\n\n  onChangePage = page => {\n    this.setState(\n      {\n        currentPage: page\n      },\n      () => this.dataListRender()\n    );\n  };\n\n  onSearchKey = e => {\n    if (e.key === \"Enter\") {\n      this.setState(\n        {\n          search: e.target.value.toLowerCase()\n        },\n        () => this.dataListRender()\n      );\n    }\n  };\n\n  onCheckExpense = (event, id) => {\n    if (\n      event.target.tagName === \"A\" ||\n      (event.target.parentElement && event.target.parentElement.tagName === \"A\")\n    ) {\n      return true;\n    }\n    if (this.state.lastChecked === null) {\n      this.setState({\n        lastChecked: id\n      });\n    }\n\n    let selectedExpenses = this.state.selectedExpenses;\n    if (selectedExpenses.includes(id)) {\n      selectedExpenses = selectedExpenses.filter(x => x !== id);\n    } else {\n      selectedExpenses.push(id);\n    }\n    this.setState({\n      selectedExpenses\n    });\n\n    if (event.shiftKey) {\n      var expenses = this.props.expenses;\n      var start = this.getIndex(id, expenses, \"id\");\n      var end = this.getIndex(this.state.lastChecked, expenses, \"id\");\n      expenses = expenses.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedExpenses.push(\n        ...expenses.map(expense => {\n          return expense._id;\n        })\n      );\n      selectedExpenses = Array.from(new Set(selectedExpenses));\n      this.setState({\n        selectedExpenses\n      });\n    }\n    document.activeElement.blur();\n  };\n\n  getIndex(value, arr, prop) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i][prop] === value) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  updateExpenses = () => {\n    const skipEntries = (this.state.currentPage - 1) * this.state.pageSize;\n    const serverCall = () =>\n      getExpenses({ skipEntries, pageSize: this.state.pageSize });\n    this.setState({ isLoading: true });\n    this.props.getExpensesAsync(\n      serverCall,\n      () => {\n        this.setState({\n          selectedExpenses: [],\n          isLoading: false,\n          totalPage: Math.ceil(\n            this.props.totalExpensesCount / this.state.pageSize\n          )\n        });\n      },\n      (succeed, message) => {\n        this.setState({ isLoading: false });\n      }\n    );\n  };\n\n  handleChangeSelectAll = isToggle => {\n    if (this.state.selectedExpenses.length >= this.props.totalExpensesCount) {\n      if (isToggle) {\n        this.setState({\n          selectedExpenses: []\n        });\n      }\n    } else {\n      this.setState({\n        selectedExpenses: this.props.expenses.map(x => x._id)\n      });\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  dataListRender() {\n    this.updateExpenses();\n  }\n\n  handleDelete = () => {\n    if (!this.isLoading && this.selectedExpensesLength !== 0) {\n      const serverCall = () =>\n        deleteExpenses({ expenseIDs: this.state.selectedExpenses });\n      this.setState({ isLoading: true });\n      this.props.deleteExpensesAsync(\n        serverCall,\n        () => {\n          this.setState({ isLoading: false });\n          this.updateExpenses();\n        },\n        (succeed, message) => {\n          this.setState({ isLoading: false });\n          if (succeed) {\n            NotificationManager.success(\n              message,\n              \"Success\",\n              3000,\n              null,\n              null,\n              \"\"\n            );\n          } else {\n            NotificationManager.error(\n              message,\n              \"Create Expense Fail\",\n              3000,\n              null,\n              null,\n              \"\"\n            );\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    const {\n      currentPage,\n      selectedOrderOption,\n      selectedExpenses,\n      orderOptions,\n      pageSize\n    } = this.state;\n    const { match } = this.props;\n    const startIndex = (currentPage - 1) * this.state.pageSize + 1;\n    const endIndex = Math.min(\n      this.props.totalExpensesCount,\n      startIndex + pageSize - 1\n    );\n\n    return this.state.isLoading ? (\n      <div className=\"loading\" />\n    ) : (\n      <Fragment>\n        <div className=\"disable-text-selection\">\n          <ListPageHeading\n            heading=\"menu.expenses\"\n            handleDelete={this.handleDelete}\n            handleChangeSelectAll={this.handleChangeSelectAll}\n            changeOrderBy={this.changeOrderBy}\n            pageSize={this.state.pageSize}\n            totalItemsCount={this.props.totalExpensesCount}\n            selectedOrderOption={selectedOrderOption}\n            match={match}\n            startIndex={startIndex}\n            endIndex={endIndex}\n            selectedItemsLength={selectedExpenses ? selectedExpenses.length : 0}\n            onSearchKey={this.onSearchKey}\n            orderOptions={orderOptions}\n            toggleModal={this.toggleModal}\n          />\n          <AddNewModal\n            categoryOptions={this.state}\n            modalOpen={this.state.modalOpen}\n            toggleModal={this.toggleModal}\n            updateExpenses={this.updateExpenses}\n            expenses={this.props.expenses}\n          />\n          <Row>\n            {this.props.expenses.map(expense => {\n              return (\n                <DataListView\n                  key={expense._id}\n                  expense={expense}\n                  isSelect={this.state.selectedExpenses.includes(expense._id)}\n                  onCheckExpense={this.onCheckExpense}\n                />\n              );\n            })}{\" \"}\n            <Pagination\n              currentPage={this.state.currentPage}\n              totalPage={this.state.totalPage}\n              onChangePage={i => this.onChangePage(i)}\n            />\n          </Row>\n        </div>\n      </Fragment>\n    );\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    return {\n      totalPage: Math.ceil(nextProps.totalExpensesCount / prevState.pageSize)\n    };\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    expenses: state.expense.expenses,\n    totalExpensesCount: state.expense.totalExpensesCount,\n    error: state.expense.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getExpensesAsync,\n  deleteExpensesAsync\n})(BrowseAll);\n"]},"metadata":{},"sourceType":"module"}