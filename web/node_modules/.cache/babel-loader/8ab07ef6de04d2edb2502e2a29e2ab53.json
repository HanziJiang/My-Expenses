{"ast":null,"code":"import _classCallCheck from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kaka/Desktop/my-expenses/web/src/views/user/register.js\";\nimport React, { Component } from \"react\";\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form, Field } from \"formik\";\nimport { register } from \"../../helpers/Server/Auth\";\nimport { authenticateAsync } from \"../../redux/actions\";\nimport IntlMessages from \"../../helpers/IntlMessages\";\nimport { NotificationManager } from \"../../components/common/react-notifications\";\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n\n    _this.onUserRegister = function (values) {\n      if (!_this.state.loading) {\n        if (values.email && values.firstName && values.lastName && values.password) {\n          _this.setLoading(true);\n\n          var serverCall = function serverCall() {\n            return register(values);\n          };\n\n          _this.props.authenticateAsync(serverCall, function () {\n            _this.setLoading(false);\n\n            _this.props.history.push(\"/\");\n          }, function (message) {\n            _this.setLoading(false);\n\n            NotificationManager.error(message, \"Sign Up Failed\", 3000, null, null, \"\");\n          });\n        }\n      }\n    };\n\n    _this.setLoading = function (isLoading) {\n      _this.setState({\n        loading: isLoading\n      });\n    };\n\n    _this.onRegisterClicked = function () {\n      _this.setState({\n        registerClicked: true\n      });\n    };\n\n    _this.validateEmail = function (value) {\n      var error;\n\n      if (!value) {\n        error = \"Please enter your email address\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n        error = \"Invalid email address\";\n      }\n\n      return error;\n    };\n\n    _this.validatePassword = function (value) {\n      var error;\n\n      if (!value) {\n        error = \"Please enter your password\";\n      } else if (value.length < 4) {\n        error = \"Value must be longer than 3 characters\";\n      }\n\n      return error;\n    };\n\n    _this.validateName = function (value) {\n      var error;\n\n      if (!value) {\n        error = \"Please enter your name\";\n      }\n\n      return error;\n    };\n\n    _this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      registerClicked: false\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          firstName = _this$state.firstName,\n          lastName = _this$state.lastName,\n          email = _this$state.email,\n          password = _this$state.password,\n          registerClicked = _this$state.registerClicked;\n      var initialValues = {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: password\n      };\n      return React.createElement(Row, {\n        className: \"h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Colxx, {\n        xxs: \"12\",\n        md: \"10\",\n        className: \"mx-auto my-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"auth-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"position-relative image-side \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-white h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"MAGIC IS IN THE DETAILS\"), React.createElement(\"p\", {\n        className: \"white mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Please use this form to register. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), \"If you are a member, please\", \" \", React.createElement(NavLink, {\n        style: {\n          textDecoration: \"underline\"\n        },\n        to: \"/user/login\",\n        className: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"login\"), \".\")), React.createElement(\"div\", {\n        className: \"form-side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/\",\n        className: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"logo-single\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(CardTitle, {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"user.register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(Formik, {\n        initialValues: initialValues,\n        onSubmit: this.onUserRegister,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, function (_ref) {\n        var errors = _ref.errors;\n        return React.createElement(Form, {\n          className: \"av-tooltip tooltip-label-bottom\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(Colxx, {\n          md: \"6\",\n          style: {\n            paddingRight: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          className: \"form-group has-float-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(IntlMessages, {\n          id: \"user.first-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        })), React.createElement(Field, {\n          className: \"form-control\",\n          name: \"firstName\",\n          validate: _this2.validateName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }), errors.firstName && registerClicked && React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, errors.firstName))), React.createElement(Colxx, {\n          md: \"6\",\n          style: {\n            paddingRight: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          className: \"form-group has-float-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(IntlMessages, {\n          id: \"user.last-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        })), React.createElement(Field, {\n          className: \"form-control\",\n          name: \"lastName\",\n          validate: _this2.validateName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }), errors.lastName && registerClicked && React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, errors.lastName)))), React.createElement(FormGroup, {\n          className: \"form-group has-float-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(IntlMessages, {\n          id: \"user.email\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        })), React.createElement(Field, {\n          className: \"form-control\",\n          name: \"email\",\n          validate: _this2.validateEmail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }), errors.email && registerClicked && React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, errors.email)), React.createElement(FormGroup, {\n          className: \"form-group has-float-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(IntlMessages, {\n          id: \"user.password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        })), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"password\",\n          name: \"password\",\n          validate: _this2.validatePassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }), errors.password && registerClicked && React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, errors.password)), React.createElement(\"div\", {\n          className: \"d-flex justify-content-end align-items-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"primary\",\n          type: \"submit\",\n          className: \"btn-shadow\",\n          size: \"lg\",\n          onClick: function onClick(event) {\n            return _this2.onRegisterClicked(event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, React.createElement(IntlMessages, {\n          id: \"user.register-button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }))));\n      })))));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var authUser = _ref2.authUser;\n  var user = authUser.user,\n      loading = authUser.loading;\n  return {\n    user: user,\n    loading: loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  authenticateAsync: authenticateAsync\n})(Register);","map":{"version":3,"sources":["/Users/kaka/Desktop/my-expenses/web/src/views/user/register.js"],"names":["React","Component","Row","Card","CardTitle","Label","FormGroup","Button","NavLink","connect","Formik","Form","Field","register","authenticateAsync","IntlMessages","NotificationManager","Colxx","Register","props","onUserRegister","values","state","loading","email","firstName","lastName","password","setLoading","serverCall","history","push","message","error","isLoading","setState","onRegisterClicked","registerClicked","validateEmail","value","test","validatePassword","length","validateName","initialValues","textDecoration","errors","paddingRight","event","mapStateToProps","authUser","user"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { register } from \"../../helpers/Server/Auth\";\r\nimport { authenticateAsync } from \"../../redux/actions\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport { NotificationManager } from \"../../components/common/react-notifications\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      registerClicked: false\r\n    };\r\n  }\r\n\r\n  onUserRegister = values => {\r\n    if (!this.state.loading) {\r\n      if (\r\n        values.email &&\r\n        values.firstName &&\r\n        values.lastName &&\r\n        values.password\r\n      ) {\r\n        this.setLoading(true);\r\n        const serverCall = () => register(values);\r\n        this.props.authenticateAsync(\r\n          serverCall,\r\n          () => {\r\n            this.setLoading(false);\r\n            this.props.history.push(\"/\");\r\n          },\r\n          message => {\r\n            this.setLoading(false);\r\n            NotificationManager.error(\r\n              message,\r\n              \"Sign Up Failed\",\r\n              3000,\r\n              null,\r\n              null,\r\n              \"\"\r\n            );\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  setLoading = isLoading => {\r\n    this.setState({ loading: isLoading });\r\n  };\r\n\r\n  onRegisterClicked = () => {\r\n    this.setState({ registerClicked: true });\r\n  };\r\n\r\n  validateEmail = value => {\r\n    let error;\r\n    if (!value) {\r\n      error = \"Please enter your email address\";\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n      error = \"Invalid email address\";\r\n    }\r\n    return error;\r\n  };\r\n\r\n  validatePassword = value => {\r\n    let error;\r\n    if (!value) {\r\n      error = \"Please enter your password\";\r\n    } else if (value.length < 4) {\r\n      error = \"Value must be longer than 3 characters\";\r\n    }\r\n    return error;\r\n  };\r\n\r\n  validateName = value => {\r\n    let error;\r\n    if (!value) {\r\n      error = \"Please enter your name\";\r\n    }\r\n    return error;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n      registerClicked\r\n    } = this.state;\r\n    const initialValues = { firstName, lastName, email, password };\r\n    return (\r\n      <Row className=\"h-100\">\r\n        <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\r\n          <Card className=\"auth-card\">\r\n            <div className=\"position-relative image-side \">\r\n              <p className=\"text-white h2\">MAGIC IS IN THE DETAILS</p>\r\n              <p className=\"white mb-0\">\r\n                Please use this form to register. <br />\r\n                If you are a member, please{\" \"}\r\n                <NavLink\r\n                  style={{ textDecoration: \"underline\" }}\r\n                  to={`/user/login`}\r\n                  className=\"white\"\r\n                >\r\n                  login\r\n                </NavLink>\r\n                .\r\n              </p>\r\n            </div>\r\n            <div className=\"form-side\">\r\n              <NavLink to={`/`} className=\"white\">\r\n                <span className=\"logo-single\" />\r\n              </NavLink>\r\n              <CardTitle className=\"mb-4\">\r\n                <IntlMessages id=\"user.register\" />\r\n              </CardTitle>\r\n              <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={this.onUserRegister}\r\n              >\r\n                {({ errors }) => (\r\n                  <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                    <Row>\r\n                      <Colxx md=\"6\" style={{ paddingRight: 10 }}>\r\n                        <FormGroup className=\"form-group has-float-label\">\r\n                          <Label>\r\n                            <IntlMessages id=\"user.first-name\" />\r\n                          </Label>\r\n                          <Field\r\n                            className=\"form-control\"\r\n                            name=\"firstName\"\r\n                            validate={this.validateName}\r\n                          />\r\n                          {errors.firstName && registerClicked && (\r\n                            <div className=\"invalid-feedback d-block\">\r\n                              {errors.firstName}\r\n                            </div>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Colxx>\r\n                      <Colxx md=\"6\" style={{ paddingRight: 10 }}>\r\n                        <FormGroup className=\"form-group has-float-label\">\r\n                          <Label>\r\n                            <IntlMessages id=\"user.last-name\" />\r\n                          </Label>\r\n                          <Field\r\n                            className=\"form-control\"\r\n                            name=\"lastName\"\r\n                            validate={this.validateName}\r\n                          />\r\n                          {errors.lastName && registerClicked && (\r\n                            <div className=\"invalid-feedback d-block\">\r\n                              {errors.lastName}\r\n                            </div>\r\n                          )}\r\n                        </FormGroup>\r\n                      </Colxx>\r\n                    </Row>\r\n                    <FormGroup className=\"form-group has-float-label\">\r\n                      <Label>\r\n                        <IntlMessages id=\"user.email\" />\r\n                      </Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        validate={this.validateEmail}\r\n                      />\r\n                      {errors.email && registerClicked && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.email}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                    <FormGroup className=\"form-group has-float-label\">\r\n                      <Label>\r\n                        <IntlMessages id=\"user.password\" />\r\n                      </Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        validate={this.validatePassword}\r\n                      />\r\n                      {errors.password && registerClicked && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.password}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n                    <div className=\"d-flex justify-content-end align-items-center\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className=\"btn-shadow\"\r\n                        size=\"lg\"\r\n                        onClick={event => this.onRegisterClicked(event)}\r\n                      >\r\n                        <IntlMessages id=\"user.register-button\" />\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ authUser }) => {\r\n  const { user, loading } = authUser;\r\n  return { user, loading };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  authenticateAsync\r\n})(Register);\r\n"]},"metadata":{},"sourceType":"module"}