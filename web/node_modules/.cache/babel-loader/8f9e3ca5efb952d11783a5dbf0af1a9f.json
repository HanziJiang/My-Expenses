{"ast":null,"code":"import _classCallCheck from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kaka/Desktop/my-expenses/web/src/views/user/reset-password.js\";\nimport React, { Component } from \"react\";\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\nimport IntlMessages from \"../../helpers/IntlMessages\";\nimport { resetPassword } from \"../../helpers/Server/Auth\";\nimport { resetPasswordAsync } from \"../../redux/actions\";\nimport { NotificationManager } from \"../../components/common/react-notifications\";\nimport { connect } from \"react-redux\";\n\nvar ResetPassword =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ResetPassword, _Component);\n\n  function ResetPassword(props) {\n    var _this;\n\n    _classCallCheck(this, ResetPassword);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResetPassword).call(this, props));\n\n    _this.onResetPassword = function (formProps) {\n      if (!_this.state.loading) {\n        var userId = _this.props.match.params.userId;\n        var tempPassword = _this.props.match.params.tempPassword;\n\n        var serverCall = function serverCall() {\n          return resetPassword(formProps, userId, tempPassword);\n        };\n\n        _this.props.resetPassword(serverCall, function () {\n          NotificationManager.success(\"Please login with your new password.\", \"Reset Password Success\", 3000, null, null, \"\");\n        }, function (error) {\n          NotificationManager.warning(error, \"Forgot Password Error\", 3000, null, null, \"\");\n        });\n      }\n    };\n\n    _this.validateNewPassword = function (values) {\n      var newPassword = values.newPassword,\n          newPasswordAgain = values.newPasswordAgain;\n      var errors = {};\n\n      if (newPasswordAgain && newPassword !== newPasswordAgain) {\n        errors.newPasswordAgain = \"Passwords do not match, please check again.\";\n      }\n\n      return errors;\n    };\n\n    _this.state = {\n      newPassword: \"\",\n      newPasswordAgain: \"\",\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(ResetPassword, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          newPassword = _this$state.newPassword,\n          newPasswordAgain = _this$state.newPasswordAgain,\n          loading = _this$state.loading;\n      var initialValues = {\n        newPassword: newPassword,\n        newPasswordAgain: newPasswordAgain\n      };\n      return React.createElement(Row, {\n        className: \"h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Colxx, {\n        xxs: \"12\",\n        md: \"10\",\n        className: \"mx-auto my-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"auth-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"position-relative image-side \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-white h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"MAGIC IS IN THE DETAILS\"), React.createElement(\"p\", {\n        className: \"white mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Please use your e-mail to reset your password. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), \"If you are not a member, please\", \" \", React.createElement(NavLink, {\n        to: \"/register\",\n        className: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"register\"), \".\")), React.createElement(\"div\", {\n        className: \"form-side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/\",\n        className: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"logo-single\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(CardTitle, {\n        className: \"mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"user.reset-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(Formik, {\n        validate: this.validateNewPassword,\n        initialValues: initialValues,\n        onSubmit: this.onResetPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, function (_ref) {\n        var errors = _ref.errors,\n            touched = _ref.touched;\n        return React.createElement(Form, {\n          className: \"av-tooltip tooltip-label-bottom\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          className: \"form-group has-float-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(IntlMessages, {\n          id: \"user.new-password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        })), React.createElement(Field, {\n          className: \"form-control\",\n          name: \"newPassword\",\n          type: \"password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        })), React.createElement(FormGroup, {\n          className: \"form-group has-float-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(IntlMessages, {\n          id: \"user.new-password-again\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        })), React.createElement(Field, {\n          className: \"form-control\",\n          name: \"newPasswordAgain\",\n          type: \"password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }), errors.newPasswordAgain && touched.newPasswordAgain && React.createElement(\"div\", {\n          className: \"invalid-feedback d-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, errors.newPasswordAgain)), React.createElement(\"div\", {\n          className: \"d-flex justify-content-between align-items-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: \"/user/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(IntlMessages, {\n          id: \"user.back-to-login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        })), React.createElement(Button, {\n          color: \"primary\",\n          className: \"btn-shadow btn-multiple-state \".concat(loading ? \"show-spinner\" : \"\"),\n          size: \"lg\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"spinner d-inline-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"bounce1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"bounce2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"bounce3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(IntlMessages, {\n          id: \"user.reset-password-button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        })))));\n      })))));\n    }\n  }]);\n\n  return ResetPassword;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var auth = _ref2.auth;\n  var error = auth.error;\n  return {\n    error: error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  resetPassword: resetPasswordAsync\n})(ResetPassword);","map":{"version":3,"sources":["/Users/kaka/Desktop/my-expenses/web/src/views/user/reset-password.js"],"names":["React","Component","Row","Card","CardTitle","Label","FormGroup","Button","NavLink","Formik","Form","Field","Colxx","IntlMessages","resetPassword","resetPasswordAsync","NotificationManager","connect","ResetPassword","props","onResetPassword","formProps","state","loading","userId","match","params","tempPassword","serverCall","success","error","warning","validateNewPassword","values","newPassword","newPasswordAgain","errors","initialValues","touched","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport { resetPassword } from \"../../helpers/Server/Auth\";\r\nimport { resetPasswordAsync } from \"../../redux/actions\";\r\nimport { NotificationManager } from \"../../components/common/react-notifications\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newPassword: \"\",\r\n      newPasswordAgain: \"\",\r\n      loading: false\r\n    };\r\n  }\r\n\r\n  onResetPassword = formProps => {\r\n    if (!this.state.loading) {\r\n      const userId = this.props.match.params.userId;\r\n      const tempPassword = this.props.match.params.tempPassword;\r\n      const serverCall = () => resetPassword(formProps, userId, tempPassword);\r\n\r\n      this.props.resetPassword(\r\n        serverCall,\r\n        () => {\r\n          NotificationManager.success(\r\n            \"Please login with your new password.\",\r\n            \"Reset Password Success\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n        },\r\n        error => {\r\n          NotificationManager.warning(\r\n            error,\r\n            \"Forgot Password Error\",\r\n            3000,\r\n            null,\r\n            null,\r\n            \"\"\r\n          );\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  validateNewPassword = values => {\r\n    const { newPassword, newPasswordAgain } = values;\r\n    let errors = {};\r\n    if (newPasswordAgain && newPassword !== newPasswordAgain) {\r\n      errors.newPasswordAgain = \"Passwords do not match, please check again.\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  render() {\r\n    const { newPassword, newPasswordAgain, loading } = this.state;\r\n    const initialValues = { newPassword, newPasswordAgain };\r\n\r\n    return (\r\n      <Row className=\"h-100\">\r\n        <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\r\n          <Card className=\"auth-card\">\r\n            <div className=\"position-relative image-side \">\r\n              <p className=\"text-white h2\">MAGIC IS IN THE DETAILS</p>\r\n              <p className=\"white mb-0\">\r\n                Please use your e-mail to reset your password. <br />\r\n                If you are not a member, please{\" \"}\r\n                <NavLink to={`/register`} className=\"white\">\r\n                  register\r\n                </NavLink>\r\n                .\r\n              </p>\r\n            </div>\r\n            <div className=\"form-side\">\r\n              <NavLink to={`/`} className=\"white\">\r\n                <span className=\"logo-single\" />\r\n              </NavLink>\r\n              <CardTitle className=\"mb-4\">\r\n                <IntlMessages id=\"user.reset-password\" />\r\n              </CardTitle>\r\n\r\n              <Formik\r\n                validate={this.validateNewPassword}\r\n                initialValues={initialValues}\r\n                onSubmit={this.onResetPassword}\r\n              >\r\n                {({ errors, touched }) => (\r\n                  <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                    <FormGroup className=\"form-group has-float-label\">\r\n                      <Label>\r\n                        <IntlMessages id=\"user.new-password\" />\r\n                      </Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"newPassword\"\r\n                        type=\"password\"\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"form-group has-float-label\">\r\n                      <Label>\r\n                        <IntlMessages id=\"user.new-password-again\" />\r\n                      </Label>\r\n                      <Field\r\n                        className=\"form-control\"\r\n                        name=\"newPasswordAgain\"\r\n                        type=\"password\"\r\n                      />\r\n                      {errors.newPasswordAgain && touched.newPasswordAgain && (\r\n                        <div className=\"invalid-feedback d-block\">\r\n                          {errors.newPasswordAgain}\r\n                        </div>\r\n                      )}\r\n                    </FormGroup>\r\n\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                      <NavLink to={`/user/login`}>\r\n                        <IntlMessages id=\"user.back-to-login\" />\r\n                      </NavLink>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        className={`btn-shadow btn-multiple-state ${\r\n                          loading ? \"show-spinner\" : \"\"\r\n                        }`}\r\n                        size=\"lg\"\r\n                        type=\"submit\"\r\n                      >\r\n                        <span className=\"spinner d-inline-block\">\r\n                          <span className=\"bounce1\" />\r\n                          <span className=\"bounce2\" />\r\n                          <span className=\"bounce3\" />\r\n                        </span>\r\n                        <span className=\"label\">\r\n                          <IntlMessages id=\"user.reset-password-button\" />\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          </Card>\r\n        </Colxx>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n  const { error } = auth;\r\n  return { error };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  resetPassword: resetPasswordAsync\r\n})(ResetPassword);\r\n"]},"metadata":{},"sourceType":"module"}