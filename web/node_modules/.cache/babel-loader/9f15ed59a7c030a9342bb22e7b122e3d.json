{"ast":null,"code":"import _classCallCheck from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kaka/Desktop/my-expenses/web/src/views/app/expenses/record/RecordExpensesCard.js\";\nimport React, { Component } from \"react\";\nimport { Card, CardBody, CardTitle, FormGroup, Button, InputGroup, InputGroupAddon, Form, Input, Row } from \"reactstrap\";\nimport Select from \"react-select\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from \"../../../../components/common/react-notifications\";\nimport { Colxx } from \"../../../../components/common/CustomBootstrap\";\nimport IntlMessages from \"../../../../helpers/IntlMessages\";\nimport CustomSelectInput from \"../../../../components/common/CustomSelectInput\";\nimport { addExpenditure } from \"../../../../helpers/Server/Expenditure\";\nvar selectData = [{\n  label: \"Cake\",\n  value: \"cake\",\n  key: 0\n}, {\n  label: \"Cupcake\",\n  value: \"cupcake\",\n  key: 1\n}, {\n  label: \"Dessert\",\n  value: \"dessert\",\n  key: 2\n}];\n\nvar RecordExpensesCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecordExpensesCard, _Component);\n\n  function RecordExpensesCard(props) {\n    var _this;\n\n    _classCallCheck(this, RecordExpensesCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RecordExpensesCard).call(this, props));\n\n    _this.setLoading = function (isLoading) {\n      _this.setState({\n        loading: isLoading\n      });\n    };\n\n    _this.handleChangeTime = function (time) {\n      _this.setState({\n        time: time\n      });\n    };\n\n    _this.handleChangeCategory = function (category) {\n      _this.setState({\n        category: category\n      });\n    };\n\n    _this.handleChangeAmount = function (event) {\n      _this.setState({\n        amount: event.target.value\n      });\n    };\n\n    _this.handleDescriptionChange = function (event) {\n      _this.setState({\n        description: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function () {\n      if (_this.isValidInput()) {\n        if (!_this.state.loading) {\n          var _this$state = _this.state,\n              amount = _this$state.amount,\n              description = _this$state.description,\n              category = _this$state.category,\n              time = _this$state.time;\n\n          _this.setLoading(true);\n\n          var serverCall = function serverCall() {\n            return addExpenditure(amount, description, category, time);\n          }; // this.props.authenticateAsync(\n          //   serverCall,\n          //   () => {\n          //     this.setLoading(false);\n          //     this.props.history.push(\"/miao\");\n          //   },\n          //   message => {\n          //     this.setLoading(false);\n          //     NotificationManager.warning(\n          //       message,\n          //       \"Login Failed\",\n          //       3000,\n          //       null,\n          //       null,\n          //       \"\"\n          //     );\n          //   }\n          // );\n\n        }\n      }\n    };\n\n    _this.state = {\n      category: null,\n      amount: \"\",\n      time: null,\n      description: \"\",\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(RecordExpensesCard, [{\n    key: \"isValidInput\",\n    value: function isValidInput() {\n      if (!this.state.time) {\n        console.log(\"Please enter time\");\n      }\n\n      if (this.state.amount <= 0) {\n        console.log(\"Please enter a positive amount\");\n      }\n\n      if (!this.state.category) {\n        console.log(\"Please select a category\");\n      }\n\n      if (!this.state.description) {\n        console.log(\"Please enter a description\");\n      }\n\n      return this.state.amount > 0 && this.state.time && this.state.category && this.state.description;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"expenses.record\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"expenses.time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(DatePicker, {\n        className: \"mb-3\",\n        selected: this.state.time,\n        onChange: this.handleChangeTime,\n        showTimeSelect: true,\n        timeIntervals: 15,\n        timeFormat: \"HH:mm\",\n        dateFormat: \"YYYY/MM/DD HH:mm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"expenses.amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(InputGroup, {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"$\"), React.createElement(Input, {\n        type: \"number\",\n        step: \"0.25\",\n        onChange: this.handleChangeAmount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"expenses.category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })), React.createElement(Select, {\n        components: {\n          Input: CustomSelectInput\n        },\n        className: \"react-select\",\n        classNamePrefix: \"react-select\",\n        name: \"form-field-name\",\n        value: this.state.category,\n        onChange: this.handleChangeCategory,\n        options: selectData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"expenses.description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(Form, {\n        className: \"record-expenditure\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Colxx, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"textarea\",\n        name: \"expenditureDescription\",\n        onChange: this.handleDescriptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        className: \"float-right\",\n        color: \"primary\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"general.submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return RecordExpensesCard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var authUser = _ref.authUser;\n  var user = authUser.user,\n      error = authUser.error;\n  return {\n    user: user,\n    error: error\n  };\n};\n\nexport default connect(mapStateToProps, {//authenticateAsync\n})(RecordExpensesCard);","map":{"version":3,"sources":["/Users/kaka/Desktop/my-expenses/web/src/views/app/expenses/record/RecordExpensesCard.js"],"names":["React","Component","Card","CardBody","CardTitle","FormGroup","Button","InputGroup","InputGroupAddon","Form","Input","Row","Select","DatePicker","connect","NotificationManager","Colxx","IntlMessages","CustomSelectInput","addExpenditure","selectData","label","value","key","RecordExpensesCard","props","setLoading","isLoading","setState","loading","handleChangeTime","time","handleChangeCategory","category","handleChangeAmount","event","amount","target","handleDescriptionChange","description","handleSubmit","isValidInput","state","serverCall","console","log","mapStateToProps","authUser","user","error"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  FormGroup,\n  Button,\n  InputGroup,\n  InputGroupAddon,\n  Form,\n  Input,\n  Row\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { connect } from \"react-redux\";\n\nimport { NotificationManager } from \"../../../../components/common/react-notifications\";\nimport { Colxx } from \"../../../../components/common/CustomBootstrap\";\nimport IntlMessages from \"../../../../helpers/IntlMessages\";\nimport CustomSelectInput from \"../../../../components/common/CustomSelectInput\";\nimport { addExpenditure } from \"../../../../helpers/Server/Expenditure\";\n\nconst selectData = [\n  { label: \"Cake\", value: \"cake\", key: 0 },\n  { label: \"Cupcake\", value: \"cupcake\", key: 1 },\n  { label: \"Dessert\", value: \"dessert\", key: 2 }\n];\n\nclass RecordExpensesCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: null,\n      amount: \"\",\n      time: null,\n      description: \"\",\n      loading: false\n    };\n  }\n\n  setLoading = isLoading => {\n    this.setState({ loading: isLoading });\n  };\n\n  handleChangeTime = time => {\n    this.setState({ time });\n  };\n\n  handleChangeCategory = category => {\n    this.setState({ category });\n  };\n\n  handleChangeAmount = event => {\n    this.setState({ amount: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  isValidInput() {\n    if (!this.state.time) {\n      console.log(\"Please enter time\");\n    }\n\n    if (this.state.amount <= 0) {\n      console.log(\"Please enter a positive amount\");\n    }\n\n    if (!this.state.category) {\n      console.log(\"Please select a category\");\n    }\n\n    if (!this.state.description) {\n      console.log(\"Please enter a description\");\n    }\n\n    return (\n      this.state.amount > 0 &&\n      this.state.time &&\n      this.state.category &&\n      this.state.description\n    );\n  }\n\n  handleSubmit = () => {\n    if (this.isValidInput()) {\n      if (!this.state.loading) {\n        const { amount, description, category, time } = this.state;\n        this.setLoading(true);\n        const serverCall = () =>\n          addExpenditure(amount, description, category, time);\n        // this.props.authenticateAsync(\n        //   serverCall,\n        //   () => {\n        //     this.setLoading(false);\n        //     this.props.history.push(\"/miao\");\n        //   },\n        //   message => {\n        //     this.setLoading(false);\n        //     NotificationManager.warning(\n        //       message,\n        //       \"Login Failed\",\n        //       3000,\n        //       null,\n        //       null,\n        //       \"\"\n        //     );\n        //   }\n        // );\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Card>\n        <CardBody>\n          <CardTitle>\n            <IntlMessages id=\"expenses.record\" />\n          </CardTitle>\n\n          <label>\n            <IntlMessages id=\"expenses.time\" />\n          </label>\n          <DatePicker\n            className=\"mb-3\"\n            selected={this.state.time}\n            onChange={this.handleChangeTime}\n            showTimeSelect\n            timeIntervals={15}\n            timeFormat=\"HH:mm\"\n            dateFormat=\"YYYY/MM/DD HH:mm\"\n          />\n\n          <label>\n            <IntlMessages id=\"expenses.amount\" />\n          </label>\n          <InputGroup className=\"mb-3\">\n            <InputGroupAddon addonType=\"prepend\">$</InputGroupAddon>\n            <Input\n              type=\"number\"\n              step=\"0.25\"\n              onChange={this.handleChangeAmount}\n            />\n          </InputGroup>\n\n          <label>\n            <IntlMessages id=\"expenses.category\" />\n          </label>\n          <Select\n            components={{ Input: CustomSelectInput }}\n            className=\"react-select\"\n            classNamePrefix=\"react-select\"\n            name=\"form-field-name\"\n            value={this.state.category}\n            onChange={this.handleChangeCategory}\n            options={selectData}\n          />\n\n          <label>\n            <IntlMessages id=\"expenses.description\" />\n          </label>\n          <Form className=\"record-expenditure\">\n            <FormGroup row>\n              <Colxx>\n                <Input\n                  type=\"textarea\"\n                  name=\"expenditureDescription\"\n                  onChange={this.handleDescriptionChange}\n                />\n              </Colxx>\n            </FormGroup>\n            <Button\n              className=\"float-right\"\n              color=\"primary\"\n              onClick={this.handleSubmit}\n            >\n              <IntlMessages id=\"general.submit\" />\n            </Button>\n          </Form>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = ({ authUser }) => {\n  const { user, error } = authUser;\n  return { user, error };\n};\n\nexport default connect(mapStateToProps, {\n  //authenticateAsync\n})(RecordExpensesCard);\n"]},"metadata":{},"sourceType":"module"}