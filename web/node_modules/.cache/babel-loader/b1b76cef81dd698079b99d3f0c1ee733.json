{"ast":null,"code":"import \"./assets/css/vendor/bootstrap.min.css\";\nimport \"./assets/css/vendor/bootstrap.rtl.only.min.css\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"react-table/react-table.css\";\nimport { isMultiColorActive, defaultColor, themeColorStorageKey, isDarkSwitchActive } from \"./constants/defaultValues\";\nvar color = (isMultiColorActive || isDarkSwitchActive) && localStorage.getItem(themeColorStorageKey) ? localStorage.getItem(themeColorStorageKey) : defaultColor;\nlocalStorage.setItem(themeColorStorageKey, color);\n\nvar render = function render() {\n  import(\"./assets/css/sass/themes/gogo.\" + color + \".scss\").then(function (x) {\n    require(\"./AppRenderer\");\n  });\n};\n\nrender();","map":{"version":3,"sources":["/Users/kaka/Desktop/my-expenses/web/src/index.js"],"names":["isMultiColorActive","defaultColor","themeColorStorageKey","isDarkSwitchActive","color","localStorage","getItem","setItem","render","then","x","require"],"mappings":"AAAA,OAAO,uCAAP;AACA,OAAO,gDAAP;AACA,OAAO,4CAAP;AACA,OAAO,6CAAP;AACA,OAAO,mDAAP;AACA,OAAO,6BAAP;AAEA,SACEA,kBADF,EAEEC,YAFF,EAGEC,oBAHF,EAIEC,kBAJF,QAKO,2BALP;AAMA,IAAMC,KAAK,GACT,CAACJ,kBAAkB,IAAIG,kBAAvB,KACAE,YAAY,CAACC,OAAb,CAAqBJ,oBAArB,CADA,GAEIG,YAAY,CAACC,OAAb,CAAqBJ,oBAArB,CAFJ,GAGID,YAJN;AAMAI,YAAY,CAACE,OAAb,CAAqBL,oBAArB,EAA2CE,KAA3C;;AAEA,IAAII,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB,SAAO,mCAAmCJ,KAAnC,GAA2C,OAAlD,EAA2DK,IAA3D,CAAgE,UAAAC,CAAC,EAAI;AACnEC,IAAAA,OAAO,CAAC,eAAD,CAAP;AACD,GAFD;AAGD,CAJD;;AAKAH,MAAM","sourcesContent":["import \"./assets/css/vendor/bootstrap.min.css\";\r\nimport \"./assets/css/vendor/bootstrap.rtl.only.min.css\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport \"react-table/react-table.css\";\r\n\r\nimport {\r\n  isMultiColorActive,\r\n  defaultColor,\r\n  themeColorStorageKey,\r\n  isDarkSwitchActive\r\n} from \"./constants/defaultValues\";\r\nconst color =\r\n  (isMultiColorActive || isDarkSwitchActive) &&\r\n  localStorage.getItem(themeColorStorageKey)\r\n    ? localStorage.getItem(themeColorStorageKey)\r\n    : defaultColor;\r\n\r\nlocalStorage.setItem(themeColorStorageKey, color);\r\n\r\nlet render = () => {\r\n  import(\"./assets/css/sass/themes/gogo.\" + color + \".scss\").then(x => {\r\n    require(\"./AppRenderer\");\r\n  });\r\n};\r\nrender();\r\n"]},"metadata":{},"sourceType":"module"}