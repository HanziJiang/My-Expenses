{"ast":null,"code":"import _objectSpread from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { AUTH_USER, AUTH_ERROR } from \"./types\";\nimport { userStorageKey } from \"../../constants/storage\";\nvar INIT_STATE = {\n  user: {\n    authenticated: sessionStorage.getItem(userStorageKey.token) || \"\",\n    firstName: sessionStorage.getItem(userStorageKey.firstName) || \"\",\n    lastName: sessionStorage.getItem(userStorageKey.lastName) || \"\"\n  },\n  error: \"\"\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case AUTH_USER:\n      return _objectSpread({}, state, {\n        user: action.payload,\n        message: \"\"\n      });\n\n    case AUTH_ERROR:\n      localStorage.removeItem(userStorageKey.token);\n      localStorage.removeItem(userStorageKey.firstName);\n      localStorage.removeItem(userStorageKey.lastName);\n      return _objectSpread({}, state, {\n        user: null,\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/kaka/Desktop/my-expenses/web/src/redux/auth/reducer.js"],"names":["AUTH_USER","AUTH_ERROR","userStorageKey","INIT_STATE","user","authenticated","sessionStorage","getItem","token","firstName","lastName","error","state","action","type","payload","message","localStorage","removeItem"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,SAAtC;AACA,SAASC,cAAT,QAA+B,yBAA/B;AAEA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,aAAa,EAAEC,cAAc,CAACC,OAAf,CAAuBL,cAAc,CAACM,KAAtC,KAAgD,EAD3D;AAEJC,IAAAA,SAAS,EAAEH,cAAc,CAACC,OAAf,CAAuBL,cAAc,CAACO,SAAtC,KAAoD,EAF3D;AAGJC,IAAAA,QAAQ,EAAEJ,cAAc,CAACC,OAAf,CAAuBL,cAAc,CAACQ,QAAtC,KAAmD;AAHzD,GADW;AAMjBC,EAAAA,KAAK,EAAE;AANU,CAAnB;AASA,gBAAe,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBT,UAAuB;AAAA,MAAXU,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,SAAL;AACE,+BAAYY,KAAZ;AAAmBR,QAAAA,IAAI,EAAES,MAAM,CAACE,OAAhC;AAAyCC,QAAAA,OAAO,EAAE;AAAlD;;AACF,SAAKf,UAAL;AACEgB,MAAAA,YAAY,CAACC,UAAb,CAAwBhB,cAAc,CAACM,KAAvC;AACAS,MAAAA,YAAY,CAACC,UAAb,CAAwBhB,cAAc,CAACO,SAAvC;AACAQ,MAAAA,YAAY,CAACC,UAAb,CAAwBhB,cAAc,CAACQ,QAAvC;AACA,+BAAYE,KAAZ;AAAmBR,QAAAA,IAAI,EAAE,IAAzB;AAA+BO,QAAAA,KAAK,EAAEE,MAAM,CAACE;AAA7C;;AACF;AACE,aAAOH,KAAP;AATJ;AAWD,CAZD","sourcesContent":["import { AUTH_USER, AUTH_ERROR } from \"./types\";\r\nimport { userStorageKey } from \"../../constants/storage\";\r\n\r\nconst INIT_STATE = {\r\n  user: {\r\n    authenticated: sessionStorage.getItem(userStorageKey.token) || \"\",\r\n    firstName: sessionStorage.getItem(userStorageKey.firstName) || \"\",\r\n    lastName: sessionStorage.getItem(userStorageKey.lastName) || \"\"\r\n  },\r\n  error: \"\"\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case AUTH_USER:\r\n      return { ...state, user: action.payload, message: \"\" };\r\n    case AUTH_ERROR:\r\n      localStorage.removeItem(userStorageKey.token);\r\n      localStorage.removeItem(userStorageKey.firstName);\r\n      localStorage.removeItem(userStorageKey.lastName);\r\n      return { ...state, user: null, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}