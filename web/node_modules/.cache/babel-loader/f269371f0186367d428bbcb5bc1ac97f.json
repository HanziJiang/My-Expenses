{"ast":null,"code":"import _classCallCheck from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kaka/Desktop/my-expenses/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kaka/Desktop/my-expenses/web/src/views/app/expenses/browseAll/AddNewModal.js\";\nimport React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport IntlMessages from \"../../../../helpers/IntlMessages\";\nimport { NotificationManager } from \"../../../../components/common/react-notifications\";\nimport { createCategory } from \"../../../../helpers/Server/Category\";\nimport { createCategoryAsync } from \"../../../../redux/actions\";\nvar selectData = [{\n  label: \"Cake\",\n  value: \"cake\",\n  key: 0\n}, {\n  label: \"Cupcake\",\n  value: \"cupcake\",\n  key: 1\n}, {\n  label: \"Dessert\",\n  value: \"dessert\",\n  key: 2\n}];\n\nvar AddNewModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddNewModal, _Component);\n\n  function AddNewModal(props) {\n    var _this;\n\n    _classCallCheck(this, AddNewModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddNewModal).call(this, props));\n\n    _this.handleTitleChange = function (event) {\n      _this.setState({\n        name: event.target.value\n      });\n    };\n\n    _this.handleAmountChange = function (event) {\n      _this.setState({\n        amount: event.target.value\n      });\n    };\n\n    _this.handleTimeChange = function (time) {\n      _this.setState({\n        time: time\n      });\n    };\n\n    _this.handleDescriptionChange = function (event) {\n      _this.setState({\n        description: event.target.value\n      });\n    };\n\n    _this.handleCategoryChange = function (category) {\n      _this.setState({\n        category: category\n      });\n    };\n\n    _this.setLoading = function (isLoading) {\n      _this.setState({\n        loading: isLoading\n      });\n    };\n\n    _this.handleSubmit = function () {\n      if (_this.isValidInput() && !_this.state.loading) {\n        var _this$props = _this.props,\n            toggleModal = _this$props.toggleModal,\n            _createCategoryAsync = _this$props.createCategoryAsync,\n            updateCategories = _this$props.updateCategories;\n        toggleModal();\n        var categoryInfo = {\n          name: _this.state.name\n        };\n\n        _this.setLoading(true);\n\n        var serverCall = function serverCall() {\n          return createCategory(categoryInfo);\n        };\n\n        _createCategoryAsync(serverCall, function () {\n          _this.setLoading(false);\n\n          updateCategories();\n        }, function (succeed, message) {\n          _this.setLoading(false);\n\n          if (succeed) {\n            NotificationManager.success(message, \"Success\", 3000, null, null, \"\");\n          } else {\n            NotificationManager.error(message, \"Create Category Fail\", 3000, null, null, \"\");\n          }\n        });\n      }\n    };\n\n    _this.state = {\n      title: \"\",\n      category: \"\",\n      amount: \"\",\n      time: null,\n      description: \"\",\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(AddNewModal, [{\n    key: \"isValidInput\",\n    value: function isValidInput() {\n      if (!this.state.name) {\n        NotificationManager.warning(\"Please enter a category name.\", \"Invalid input\", 3000, null, null, \"\");\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          modalOpen = _this$props2.modalOpen,\n          toggleModal = _this$props2.toggleModal;\n      return React.createElement(Modal, {\n        isOpen: modalOpen,\n        toggle: toggleModal,\n        wrapClassName: \"modal-right\",\n        backdrop: \"static\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"categories.add-new-category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"categories.name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(Input, {\n        onChange: this.handleNameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(Label, {\n        className: \"mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"categories.description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(Input, {\n        type: \"textarea\",\n        onChange: this.handleDescriptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        outline: true,\n        onClick: toggleModal,\n        className: \"btn-shadow btn-multiple-state \".concat(this.state.loading ? \"show-spinner\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"genaral.cancel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"spinner d-inline-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"bounce1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"bounce2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"bounce3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"general.submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }))), \" \"));\n    }\n  }]);\n\n  return AddNewModal;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    categories: state.category.categories\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createCategoryAsync: createCategoryAsync\n})(AddNewModal);","map":{"version":3,"sources":["/Users/kaka/Desktop/my-expenses/web/src/views/app/expenses/browseAll/AddNewModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","Label","connect","IntlMessages","NotificationManager","createCategory","createCategoryAsync","selectData","label","value","key","AddNewModal","props","handleTitleChange","event","setState","name","target","handleAmountChange","amount","handleTimeChange","time","handleDescriptionChange","description","handleCategoryChange","category","setLoading","isLoading","loading","handleSubmit","isValidInput","state","toggleModal","updateCategories","categoryInfo","serverCall","succeed","message","success","error","title","warning","modalOpen","handleNameChange","mapStateToProps","categories"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Label\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\n\nimport IntlMessages from \"../../../../helpers/IntlMessages\";\nimport { NotificationManager } from \"../../../../components/common/react-notifications\";\nimport { createCategory } from \"../../../../helpers/Server/Category\";\nimport { createCategoryAsync } from \"../../../../redux/actions\";\n\nconst selectData = [\n  { label: \"Cake\", value: \"cake\", key: 0 },\n  { label: \"Cupcake\", value: \"cupcake\", key: 1 },\n  { label: \"Dessert\", value: \"dessert\", key: 2 }\n];\n\nclass AddNewModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      category: \"\",\n      amount: \"\",\n      time: null,\n      description: \"\",\n      loading: false\n    };\n  }\n\n  handleTitleChange = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  handleAmountChange = event => {\n    this.setState({ amount: event.target.value });\n  };\n\n  handleTimeChange = time => {\n    this.setState({ time });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  handleCategoryChange = category => {\n    this.setState({ category });\n  };\n\n  setLoading = isLoading => {\n    this.setState({ loading: isLoading });\n  };\n\n  isValidInput() {\n    if (!this.state.name) {\n      NotificationManager.warning(\n        \"Please enter a category name.\",\n        \"Invalid input\",\n        3000,\n        null,\n        null,\n        \"\"\n      );\n      return false;\n    }\n    return true;\n  }\n\n  handleSubmit = () => {\n    if (this.isValidInput() && !this.state.loading) {\n      const { toggleModal, createCategoryAsync, updateCategories } = this.props;\n      toggleModal();\n      const categoryInfo = {\n        name: this.state.name\n      };\n      this.setLoading(true);\n      const serverCall = () => createCategory(categoryInfo);\n      createCategoryAsync(\n        serverCall,\n        () => {\n          this.setLoading(false);\n          updateCategories();\n        },\n        (succeed, message) => {\n          this.setLoading(false);\n          if (succeed) {\n            NotificationManager.success(\n              message,\n              \"Success\",\n              3000,\n              null,\n              null,\n              \"\"\n            );\n          } else {\n            NotificationManager.error(\n              message,\n              \"Create Category Fail\",\n              3000,\n              null,\n              null,\n              \"\"\n            );\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    const { modalOpen, toggleModal } = this.props;\n    return (\n      <Modal\n        isOpen={modalOpen}\n        toggle={toggleModal}\n        wrapClassName=\"modal-right\"\n        backdrop=\"static\"\n      >\n        <ModalHeader toggle={toggleModal}>\n          <IntlMessages id=\"categories.add-new-category\" />\n        </ModalHeader>\n        <ModalBody>\n          <Label>\n            <IntlMessages id=\"categories.name\" />\n          </Label>\n          <Input onChange={this.handleNameChange} />\n          <Label className=\"mt-4\">\n            <IntlMessages id=\"categories.description\" />\n          </Label>\n          <Input type=\"textarea\" onChange={this.handleDescriptionChange} />\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"primary\"\n            outline\n            onClick={toggleModal}\n            className={`btn-shadow btn-multiple-state ${\n              this.state.loading ? \"show-spinner\" : \"\"\n            }`}\n          >\n            <IntlMessages id=\"genaral.cancel\" />\n          </Button>\n          <Button color=\"primary\" onClick={this.handleSubmit}>\n            <span className=\"spinner d-inline-block\">\n              <span className=\"bounce1\" />\n              <span className=\"bounce2\" />\n              <span className=\"bounce3\" />\n            </span>\n            <span className=\"label\">\n              <IntlMessages id=\"general.submit\" />\n            </span>\n          </Button>{\" \"}\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.category.categories\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createCategoryAsync\n})(AddNewModal);\n"]},"metadata":{},"sourceType":"module"}