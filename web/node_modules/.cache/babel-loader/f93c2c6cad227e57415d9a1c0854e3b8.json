{"ast":null,"code":"/**\n * Default axios validateStatus function for this app.\n * Resolves the promise when status code is 2xx and 4xx.\n * Reject if otherwise.\n * @param {*} status server returned status\n */\nexport var validateStatus = function validateStatus(status) {\n  return status >= 200 && status < 300 || status >= 400 && status < 500;\n};\nexport var validateStatusConfig = {\n  validateStatus: validateStatus\n};","map":{"version":3,"sources":["/Users/kaka/Desktop/my-expenses/web/src/helpers/Server/Axios.js"],"names":["validateStatus","status","validateStatusConfig"],"mappings":"AAAA;;;;;;AAMA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,MAAM,EAAI;AACtC,SAAQA,MAAM,IAAI,GAAV,IAAiBA,MAAM,GAAG,GAA3B,IAAoCA,MAAM,IAAI,GAAV,IAAiBA,MAAM,GAAG,GAArE;AACD,CAFM;AAIP,OAAO,IAAMC,oBAAoB,GAAG;AAAEF,EAAAA,cAAc,EAAEA;AAAlB,CAA7B","sourcesContent":["/**\n * Default axios validateStatus function for this app.\n * Resolves the promise when status code is 2xx and 4xx.\n * Reject if otherwise.\n * @param {*} status server returned status\n */\nexport const validateStatus = status => {\n  return (status >= 200 && status < 300) || (status >= 400 && status < 500);\n};\n\nexport const validateStatusConfig = { validateStatus: validateStatus };\n"]},"metadata":{},"sourceType":"module"}